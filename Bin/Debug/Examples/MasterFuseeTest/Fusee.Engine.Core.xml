<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.Engine.Core</name>
    </assembly>
    <members>
        <member name="T:Fusee.Engine.Audio">
             <summary>
             The Audio class provides all audio functionality. It is accessible from everywhere.                          
             </summary>
             <remarks>
             Supported file formats are: mp3, ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc,
             ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64
             
             Audio can be either buffered completely or be played as a stream.
             
             E.g. : IAudioStream myAudio1;
            
                    myAudio1 = Audio.Instance.LoadFile("Assets/Music.ogg"). 
             
                    myAudio1.play();  
             </remarks>
        </member>
        <member name="M:Fusee.Engine.Audio.LoadFile(System.String,System.Boolean)">
            <summary>
            Loads an audiofile.
            </summary>
            <param name="fileName">Path to the file.</param>
            <param name="streaming"><c>true</c> if the audiofile shall be streamed; otherwise, <c>false</c>.</param>
            <returns>The audiofile as an <see cref="T:Fusee.Engine.IAudioStream"/></returns>
        </member>
        <member name="M:Fusee.Engine.Audio.Stop">
            <summary>
            Stops all <see cref="T:Fusee.Engine.IAudioStream"/>s.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Audio.SetVolume(System.Single)">
            <summary>
            Sets the main volume (0 to 100)
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="M:Fusee.Engine.Audio.GetVolume">
            <summary>
            Gets the main volume.
            </summary>
            <returns>The main value (0 to 100)</returns>
        </member>
        <member name="M:Fusee.Engine.Audio.SetPanning(System.Single)">
            <summary>
            Sets the panning of all <see cref="T:Fusee.Engine.IAudioStream"/>s (-100 to +100)
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="P:Fusee.Engine.Audio.Instance">
            <summary>
            Provides the Instance of the Audio Class.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:Fusee.Engine.ConvexHullShape">
            <summary>
            This is the fastest kind of arbitrary shape. 
            It is defined by a cloud of vertices but the shape formed is the smallest convex shape that encloses the vertices. 
            For making a convex dynamic shape like a TV, this is ideal. 
            Make sure to reduce the number of vertices below say 100.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ConvexHullShape.AddPoint(Fusee.Math.float3)">
            <summary>
            Add a vertice to the cloud of vertices.
            There can't be added any vertices to the Shape once it has been added to a rigidbody
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:Fusee.Engine.Cube">
            <summary>
            Creates a simple cube geomentry straight from the code.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Mesh">
            <summary>
            Provides the abillity to create or interact directly with the point data.
            </summary>
            <remarks>For an example how you can use it, see <see cref="T:Fusee.Engine.Cube"/>.</remarks>
        </member>
        <member name="P:Fusee.Engine.Mesh.Vertices">
            <summary>
            Gets or sets the vertices.
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.VerticesSet">
            <summary>
            Gets a value indicating whether vertices are set.
            </summary>
            <value>
              <c>true</c> if vertices are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.Colors">
            <summary>
            Gets or sets the color of a single vertex.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.ColorsSet">
            <summary>
            Gets a value indicating whether a color is set.
            </summary>
            <value>
              <c>true</c> if a colore is set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.Normals">
            <summary>
            Gets or sets the normals.
            </summary>
            <value>
            The normals..
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.NormalsSet">
            <summary>
            Gets a value indicating whether normals are set.
            </summary>
            <value>
              <c>true</c> if normals are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.UVs">
            <summary>
            Gets or sets the UV-coordinates.
            </summary>
            <value>
            The UV-coordinates.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.UVsSet">
            <summary>
            Gets a value indicating whether UVs are set.
            </summary>
            <value>
              <c>true</c> if UVs are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.Triangles">
            <summary>
            Gets or sets the triangles.
            </summary>
            <value>
            The triangles.
            </value>
        </member>
        <member name="P:Fusee.Engine.Mesh.TrianglesSet">
            <summary>
            Gets a value indicating whether triangles are set.
            </summary>
            <value>
              <c>true</c> if triangles are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Engine.Cube.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Cube"/> class.
            Cube is a derivate of the <see cref="T:Fusee.Engine.Mesh"/> class.
            The default cube is 1 unit big and contains various default vertex colors.
            The vertex colors are only visible during rendering when a vertexcolor shader is applied on the Mesh.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Diagnostics">
            <summary>
            Contains some mostly static functions for diagnostic purposes.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Diagnostics.Log(System.Object)">
            <summary>
            Log a debug output message to the respective output console.
            </summary>
            <param name="o">The object to log. Will be converted to a string.</param>
        </member>
        <member name="P:Fusee.Engine.Diagnostics.Timer">
            <summary>
            High precision timer values.
            </summary>
            <value>
            A double value containing consecutive real time values in milliseconds.
            </value>
            <remarks>
            To measure the elapsed time between two places in code get this value twice and calculate the difference.
            </remarks>
        </member>
        <member name="T:Fusee.Engine.Face">
            <summary>
            A container that stores indices for vertices, normals and texture coordinates.
            The values are used for conversion to different geometry face formats, e.g. Triangles.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Face.InxVert">
            <summary>
            The inx vert
            </summary>
        </member>
        <member name="F:Fusee.Engine.Face.InxNormal">
            <summary>
            The inx normal
            </summary>
        </member>
        <member name="F:Fusee.Engine.Face.InxTexCoord">
            <summary>
            The inx tex coord
            </summary>
        </member>
        <member name="T:Fusee.Engine.Geometry">
            <summary>
            Stores threedimensional, polygonal geometry and provides methods for manipulation.
            To actually render the geometry in the engine, convert Geometry to <see cref="T:Fusee.Engine.Mesh"/> objects.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Geometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Geometry"/> class.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Geometry.AddVertex(Fusee.Math.double3)">
            <summary>
            Adds a vertex.
            </summary>
            <param name="v">A 3D vector.</param>
            <returns>The current vertex count.</returns>
        </member>
        <member name="M:Fusee.Engine.Geometry.AddTexCoord(Fusee.Math.double2)">
            <summary>
            Adds the texture coordinates.
            </summary>
            <param name="uv">Texture coordinate</param>
            <returns>The count of <see cref="P:Fusee.Engine.Geometry.TexCoords"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.Geometry.AddNormal(Fusee.Math.double3)">
            <summary>
            Adds the normal.
            </summary>
            <param name="normal">The normal.</param>
            <returns>The count of <see cref="P:Fusee.Engine.Geometry.Normals"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.Geometry.AddFace(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Adds the face.
            </summary>
            <param name="vertInx">The vert inx.</param>
            <param name="texCoordInx">The tex coord inx.</param>
            <param name="normalInx">The normal inx.</param>
            <returns>The face count as integer value.</returns>
            <exception cref="T:System.ArgumentNullException">vertInx</exception>
            <exception cref="T:System.ArgumentException">
            "Vertex index out of range: vertInx[i]"
            or
            "Number of texture coordinate indices must match number of vertex indices"
            or
            "Texture coordinate index out of range: texCoordInx[i]"
            or
            "Number of normal indices must match number of vertex indices"
            or
            "Normal index out of range: normalInx[i]"
            </exception>
        </member>
        <member name="M:Fusee.Engine.Geometry.GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)">
            <summary>
            Gets all faces containing a certain vertex.
            </summary>
            <param name="iV">The index of the vertex.</param>
            <param name="vertInFace">Out parameter: A list of indices of the vertex in each respecitve face.</param>
            <returns>A list of indices containing the vertex.</returns>
        </member>
        <member name="M:Fusee.Engine.Geometry.CalcFaceNormal(Fusee.Engine.Face)">
            <summary>
            Calculates the normal vector for a given face.
            </summary>
            <param name="f">The face to calculate the normal for.</param>
            <returns>The nomal vector for the face.</returns>
            <exception cref="T:System.Exception">The face doesn't consist of 3 or more vertices.</exception>
        </member>
        <member name="M:Fusee.Engine.Geometry.CreateNormals(System.Double)">
            <summary>
            Creates normals for the entire geometry based on a given smoothing angle.
            </summary>
            <param name="smoothingAngle">The smoothing angle.</param>
        </member>
        <member name="M:Fusee.Engine.Geometry.ToMesh">
            <summary>
            Converts the whole geomentry to a <see cref="T:Fusee.Engine.Mesh"/>.
            </summary>
            <returns>An equivalent instance of <see cref="T:Fusee.Engine.Mesh"/>.</returns>
        </member>
        <member name="P:Fusee.Engine.Geometry.Vertices">
            <summary>
            The list of vertices (3D positions).
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Fusee.Engine.Geometry.Normals">
            <summary>
            Gets or sets the normals.
            </summary>
            <value>
            The normals.
            </value>
        </member>
        <member name="P:Fusee.Engine.Geometry.TexCoords">
            <summary>
            Gets or sets the texture coordinates.
            </summary>
            <value>
            The texture coordinates.
            </value>
        </member>
        <member name="P:Fusee.Engine.Geometry.Faces">
            <summary>
            Gets or sets the faces.
            </summary>
            <value>
            The faces.
            </value>
        </member>
        <member name="P:Fusee.Engine.Geometry.HasNormals">
            <summary>
            Gets a value indicating whether this instance has normals.
            </summary>
            <value>
            <c>true</c> if this instance has normals; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Geometry.HasTexCoords">
            <summary>
            Gets a value indicating whether this instance has tex coords.
            </summary>
            <value>
            <c>true</c> if this instance has texture coordinates; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Fusee.Engine.Geometry.TripleInx.iV">
            <summary>
            The i V
            </summary>
        </member>
        <member name="F:Fusee.Engine.Geometry.TripleInx.iT">
            <summary>
            The i V
            </summary>
        </member>
        <member name="F:Fusee.Engine.Geometry.TripleInx.iN">
            <summary>
            The i V
            </summary>
        </member>
        <member name="M:Fusee.Engine.Geometry.TripleInx.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Fusee.Engine.GUIButtonHandler">
            <summary>
                A delegation for the event listeners of a <see cref="T:Fusee.Engine.GUIButton"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="mea">The <see cref="T:Fusee.Engine.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusee.Engine.GUIButton">
            <summary>
                The <see cref="T:Fusee.Engine.GUIButton"/> class provides functionality for creating 2D/GUI buttons.
            </summary>
            <remarks>
                A <see cref="T:Fusee.Engine.GUIButton"/> doesn't need to have a text on it. It can be modified to be a rectangle with
                an event listener by making its background color transparent and setting a border width of 1 or greater.
            </remarks>
        </member>
        <member name="T:Fusee.Engine.GUIElement">
            <summary>
            This abstact class allows for creating custom <see cref="T:Fusee.Engine.GUIElement"/>s.
            </summary>
        </member>
        <member name="M:Fusee.Engine.GUIElement.Refresh">
            <summary>
                Refreshes this element (is called when the properties of this element have been changed).
            </summary>
            <remarks>
                This should be called after the viewport / the windows has been resized. It's also possible to call the Refresh
                method of a <see cref="T:Fusee.Engine.GUIHandler"/> object."
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIElement.Render(Fusee.Engine.RenderContext)">
            <summary>
                Renders this element onto a specifie <see cref="T:Fusee.Engine.RenderContext"/>.
            </summary>
            <param name="rc">The <see cref="T:Fusee.Engine.RenderContext"/>.</param>
        </member>
        <member name="P:Fusee.Engine.GUIElement.TextColor">
            <summary>
                Gets or sets the color of this element's text.
            </summary>
            <value>
                The color of the text.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIElement.Text">
            <summary>
                Gets or sets this element's text.
            </summary>
            <value>
                The text.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIElement.PosX">
            <summary>
                Gets or sets this element's x-coordinate.
            </summary>
            <value>
                The x-coordinate.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIElement.PosY">
            <summary>
                Gets or sets this element's y-coordinate.
            </summary>
            <value>
                The y-coordinate.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIElement.Tag">
            <summary>
                Gets or sets the tag.
            </summary>
            <value>
                The tag.
            </value>
            <remarks>
                The tag can be used to store information about other GUIElements
                or any other kind of information like numbers or strings.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.GUIElement.GUIMesh">
            <summary>
                Gets the automatically generated GUI mesh.
            </summary>
            <value>
                The GUI mesh.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIElement.TextMesh">
            <summary>
                Gets the automatically generated text mesh.
            </summary>
            <value>
                The text mesh.
            </value>
        </member>
        <member name="M:Fusee.Engine.GUIButton.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIButton"/> class.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Fusee.Engine.GUIButton.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIButton"/> class.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIButton.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIButton"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Fusee.Engine.GUIButton.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIButton"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.GUIButton.ButtonColor">
            <summary>
                Gets or sets the color of the button.
            </summary>
            <value>
                The color of the button.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIButton.BorderWidth">
            <summary>
                Gets or sets the width of the border.
            </summary>
            <value>
                The width of the border.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIButton.BorderColor">
            <summary>
                Gets or sets the color of the border.
            </summary>
            <value>
                The color of the border.
            </value>
        </member>
        <member name="E:Fusee.Engine.GUIButton.OnGUIButtonDown">
            <summary>
                Occurs when mouse button is pressed on this button.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIButton.OnGUIButtonUp">
            <summary>
                Occurs when mouse button is released on this button.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIButton.OnGUIButtonEnter">
            <summary>
                Occurs when the mouse cursor enters this button.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIButton.OnGUIButtonLeave">
            <summary>
                Occurs when the mouse cursor leaves this button.
            </summary>
        </member>
        <member name="T:Fusee.Engine.GUIHandler">
            <summary>
                A <see cref="T:Fusee.Engine.GUIHandler"/> is a <see cref="T:System.Collections.Generic.List`1"/> of different
                <see cref="T:Fusee.Engine.GUIElement"/>s to be drawn onto a screen.
            </summary>
            <remarks>
                A <see cref="T:Fusee.Engine.GUIHandler"/> is necessary to make a GUI in FUSEE. However, one can have more than
                one <see cref="T:Fusee.Engine.GUIHandler"/> (e.g. one for the main menu GUI and one for the ingame GUI) and attach
                and detach them from an <see cref="T:Fusee.Engine.RenderContext"/> whenever needed.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIHandler"/> class.
            </summary>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.#ctor(Fusee.Engine.RenderContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIHandler"/> class.
            </summary>
            <param name="rc">The rc.</param>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.AttachToContext(Fusee.Engine.RenderContext)">
            <summary>
                Attaches this GUIHandler to a specific <see cref="T:Fusee.Engine.RenderContext"/>.
            </summary>
            <param name="rc">The <see cref="T:Fusee.Engine.RenderContext"/> to which the GUIHandler should be attached to.</param>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.DetachFromContext">
            <summary>
                Detaches this GUIHandler from a specific <see cref="T:Fusee.Engine.RenderContext"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.Add(Fusee.Engine.GUIElement)">
            <summary>
                Adds a new <see cref="T:Fusee.Engine.GUIElement"/> to this GUIHandler.
            </summary>
            <param name="item">The <see cref="T:Fusee.Engine.GUIElement"/>.</param>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.Refresh">
            <summary>
                Refreshes all <see cref="T:Fusee.Engine.GUIElement"/>s of this GUIHandler.
            </summary>
        </member>
        <member name="M:Fusee.Engine.GUIHandler.RenderGUI">
            <summary>
                Renders the GUI onto the attached <see cref="T:Fusee.Engine.RenderContext"/>.
            </summary>
            <remarks>
                The <see cref="T:Fusee.Engine.GUIElement"/>s are rendered according to their ZIndex. If two <see cref="T:Fusee.Engine.GUIElement"/>s have the
                same ZIndex, then they are rendered in the order they were added to this GUIHandler (from back to front).
            </remarks>
        </member>
        <member name="T:Fusee.Engine.GUIText">
            <summary>
                The <see cref="T:Fusee.Engine.GUIText"/> class provides all text writing functionality.
            </summary>
        </member>
        <member name="M:Fusee.Engine.GUIText.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="M:Fusee.Engine.GUIText.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIText.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32,Fusee.Math.float4)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <param name="color">The color.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIText.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,Fusee.Math.float4)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIText"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:Fusee.Engine.GUIText.GetTextHeight(System.String,Fusee.Engine.IFont)">
            <summary>
                Gets the height of a text written in a specific font.
            </summary>
            <param name="text">The text's string.</param>
            <param name="font">The text's font.</param>
            <returns>The height of the text.</returns>
        </member>
        <member name="M:Fusee.Engine.GUIText.GetTextWidth(System.String,Fusee.Engine.IFont)">
            <summary>
                Gets the width of a text written in a specific font.
            </summary>
            <param name="text">The text's string.</param>
            <param name="font">The text's font.</param>
            <returns>The width of the text.</returns>
        </member>
        <member name="T:Fusee.Engine.GUIPanelHandler">
            <summary>
                A delegation for the event listeners of a <see cref="T:Fusee.Engine.GUIPanel"/>.
            </summary>
            <param name="sender">The sender.</param>
            <param name="mea">The <see cref="T:Fusee.Engine.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Fusee.Engine.GUIPanel">
            <summary>
                A panel which groups other GUIElements together and give them a headline.
            </summary>
            <remarks>
                This is a hierarchical structure which means that the position of the children
                of a <see cref="T:Fusee.Engine.GUIPanel"/> depends on the position of the GUIPanel itself.
                One could for example add some buttons to such a panel and then position the
                panel in the middle of the screen. In this case, just the coordinates of the
                panel have to be set, the buttons inside the panel will move accordingly!
            </remarks>
        </member>
        <member name="F:Fusee.Engine.GUIPanel.ChildElements">
            <summary>
                The children of this panel.
            </summary>
            <remarks>
                This is a hierarchical structure which means that the position of the children depends on
                the position of the panel. This can be used to group <see cref="T:Fusee.Engine.GUIElement"/>s
                together and move them (e.g. to the center of the screen) just by moving the panel.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIPanel.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIPanel"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIPanel.#ctor(System.String,Fusee.Engine.IFont,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIPanel"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="font">The font.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Fusee.Engine.GUIPanel.Refresh">
            <summary>
                Refreshes this element and all children (is called when the properties of this element have been changed).
            </summary>
            <remarks>
                This should be called after the viewport / the windows has been resized.
                It's also possible to call the Refresh method of a <see cref="T:Fusee.Engine.GUIHandler"/> object."
            </remarks>
        </member>
        <member name="P:Fusee.Engine.GUIPanel.PanelColor">
            <summary>
                Gets or sets the color of the panel.
            </summary>
            <value>
                The color of the panel.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIPanel.BorderWidth">
            <summary>
                Gets or sets the width of the border.
            </summary>
            <value>
                The width of the border.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIPanel.BorderColor">
            <summary>
                Gets or sets the color of the border.
            </summary>
            <value>
                The color of the border.
            </value>
        </member>
        <member name="E:Fusee.Engine.GUIPanel.OnGUIPanelDown">
            <summary>
                Occurs when mouse button is pressed on this panel.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIPanel.OnGUIPanelUp">
            <summary>
                Occurs when mouse button is released on this panel.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIPanel.OnGUIPanelEnter">
            <summary>
                Occurs when the mouse cursor enters this panel.
            </summary>
        </member>
        <member name="E:Fusee.Engine.GUIPanel.OnGUIPanelLeave">
            <summary>
                Occurs when the mouse cursor leaves this panel.
            </summary>
        </member>
        <member name="T:Fusee.Engine.GUIImage">
            <summary>
                The <see cref="T:Fusee.Engine.GUIImage"/> class provides functionality for loading and displaying 2D images.
            </summary>
            <remarks>
                Images can be transparent *.png files, too.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIImage.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIImage"/> class.
            </summary>
            <param name="img">The path to the image.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="z">The z-index.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <remarks>
                The z-index: lower values means further away. If two elements have the same z-index
                then they are rendered according to their order in the <see cref="T:Fusee.Engine.GUIHandler"/>.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.GUIImage.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Fusee.Engine.GUIImage"/> class.
            </summary>
            <param name="img">The path to the image.</param>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:Fusee.Engine.GUIImage.BorderWidth">
            <summary>
                Gets or sets the width of the border.
            </summary>
            <value>
                The width of the border.
            </value>
        </member>
        <member name="P:Fusee.Engine.GUIImage.BorderColor">
            <summary>
                Gets or sets the color of the border.
            </summary>
            <value>
                The color of the border.
            </value>
        </member>
        <member name="T:Fusee.Engine.NamespaceDoc">
            <summary>
                The Fusee Framework.
            </summary>
        </member>
        <member name="T:Fusee.Engine.ImpFactory">
            <summary>
                The implementation factory. Creates all the implementation specific objects and returns
                their implementation agnostic interfaces.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIRenderCanvasImp">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IRenderCanvasImp"/> by reflection of RenderingImplementor.
            </summary>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IRenderCanvasImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIDynamicWorldImp">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IDynamicWorldImp"/> by reflection of PhysicsImplementor.
            </summary>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IDynamicWorldImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIRenderContextImp(Fusee.Engine.IRenderCanvasImp)">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IRenderContextImp"/> by reflection of RenderingImplementor.
            </summary>
            <param name="renderCanvas">The render canvas.</param>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IRenderContextImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIInputImp(Fusee.Engine.IRenderCanvasImp)">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IInputImp"/> by reflection of RenderingImplementor.
            </summary>
            <param name="renderCanvas">The render canvas.</param>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IInputImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIAudioImp">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IAudioImp"/> by reflection of AudioImplementor.
            </summary>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IAudioImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateINetworkImp">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.INetworkImp"/> by reflection of NetworkImplementor.
            </summary>
            <returns>
                An instance of <see cref="T:Fusee.Engine.INetworkImp"/>.
            </returns>
        </member>
        <member name="M:Fusee.Engine.ImpFactory.CreateIInputDriverImp">
            <summary>
                Creates an instance of <see cref="T:Fusee.Engine.IInputDriverImp"/> by reflection of InputDriverImplementor.
            </summary>
            <returns>
                An instance of <see cref="T:Fusee.Engine.IInputDriverImp"/>.
            </returns>
        </member>
        <member name="T:Fusee.Engine.Input">
            <summary>
                The Input class takes care of all inputs. It is accessible from everywhere inside a Fusee project.
                E.g. : Input.Instance.IsButtonDown(MouseButtons.Left);
            </summary>
        </member>
        <member name="M:Fusee.Engine.Input.GetAxis(Fusee.Engine.InputAxis)">
            <summary>
                Returns the scalar value for the given axis. Typically these values are used as velocities.
            </summary>
            <param name="axis">The axis for which the value is to be returned.</param>
            <returns>
                The current deflection of the given axis.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Input.SetMousePos(Fusee.Engine.Point)">
            <summary>
                Sets the mouse position.
            </summary>
            <param name="pos">A <see cref="T:Fusee.Engine.Point"/> with x and y values.</param>
        </member>
        <member name="M:Fusee.Engine.Input.GetMousePos">
            <summary>
                Gets the mouse position.
            </summary>
            <returns>A <see cref="T:Fusee.Engine.Point"/> with x and y values.</returns>
        </member>
        <member name="M:Fusee.Engine.Input.IsKey(Fusee.Engine.KeyCodes)">
            <summary>
                Check if a given key is pressed during the current frame.
            </summary>
            <param name="key">The key to check.</param>
            <returns>
                true if the key is pressed. Otherwise false.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Input.IsKeyDown(Fusee.Engine.KeyCodes)">
            <summary>
                Check if the user started pressing a key in the current frame.
            </summary>
            <param name="key">The key to check.</param>
            <returns>
                true if the user started pressing the key in the current frame. Otherwise false.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Input.IsKeyUp(Fusee.Engine.KeyCodes)">
            <summary>
                Check if the user stopped pressing a key in the current frames.
            </summary>
            <param name="key">The key to check.</param>
            <returns>
                true if the user stopped pressing the key in the current frame. Otherwise false.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Input.IsButton(Fusee.Engine.MouseButtons)">
            <summary>
                Check if a given mouse button is pressed during the current frame.
            </summary>
            <param name="button">the mousebutton to check.</param>
            <returns>
                True if the mousebutton is pressed. Otherwise false.
            </returns>
        </member>
        <member name="F:Fusee.Engine.Input.Devices">
            <summary>
                Input devices like gamepads are managed here.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Input.InitializeDevices">
            <summary>
                All connected input devices are added to <see cref="F:Fusee.Engine.Input.Devices"/> - List and the names and indices of
                the devices are printed to the debugging - console.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Input.GetDevice(System.Int32)">
            <summary>
                Checks if a device at the specified index exists and returns it if it exists.
            </summary>
            <param name="deviceIndex">The index at <see cref="F:Fusee.Engine.Input.Devices"/></param>
            <returns>The device at the specified index </returns>
        </member>
        <member name="M:Fusee.Engine.Input.CountDevices">
            <summary>
                Counts the devices.
            </summary>
            <returns>The amount of devices</returns>
        </member>
        <member name="P:Fusee.Engine.Input.FixMouseAtCenter">
            <summary>
                Gets or sets a value indicating whether to fix mouse at center.
            </summary>
            <value>
                <c>true</c> if the mouse is fixed at center; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Input.CursorVisible">
            <summary>
                Gets or sets a value indicating whether the cursor is visible.
            </summary>
            <value>
                <c>true</c> if the cursor is visible; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Input.Instance">
            <summary>
                Provides the Instance of the Input Class.
            </summary>
        </member>
        <member name="T:Fusee.Engine.InputDevice">
            <summary>
            Represents one instance of an input device other than keyboard or mouse
            </summary>
        </member>
        <member name="M:Fusee.Engine.InputDevice.#ctor(Fusee.Engine.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.InputDevice"/> class.
            </summary>
            <param name="inputDeviceImp">The input device imp.</param>
        </member>
        <member name="M:Fusee.Engine.InputDevice.GetAxis(Fusee.Engine.InputDevice.Axis)">
            <summary>
            Gets the current value of one axis (i.e. joystick or trigger).
            </summary>
            <param name="axis">Specifies the desired axis, can be "horizontal", "vertical" or "z".</param>
            <returns>
            The current value (between -1.0 and +1.0) for the specified axis.
            </returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.Name">
            <summary>
            Gets the name of the instance 
            </summary>
            <returns>The product name of the queried input device.</returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.GetPressedButton">
            <summary>
            Gets the index of the currently pressed button on the input device.
            </summary>
            <returns>The index of the currently pressed button</returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.IsButtonDown(System.Int32)">
            <summary>
            Checks if a specified button is pressed in the current frame on the input device.
            </summary>
            <param name="buttonIndex">The index of the button that is checked.</param>
            <returns>True if the button at the specified index is pressed in the current frame and false if not.</returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.IsButtonPressed(System.Int32)">
            <summary>
            Checks if a specified button is held down for more than one frame.
            </summary>
            <param name="buttonIndex">The index of the button that is checked.</param>
            <returns>True if the button at the specified index is held down for more than one frame and false if not.</returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.GetButtonCount">
            <summary>
            Counts the buttons on the input device.
            </summary>
            <returns>The amount of buttons on the device.</returns>
        </member>
        <member name="M:Fusee.Engine.InputDevice.GetCategory">
            <summary>
            Gets the category of the input device.
            </summary>
            <returns>The name of the Device Category.</returns>
        </member>
        <member name="T:Fusee.Engine.MeshReader">
            <summary>
                This class is used to load 3D Models in .obj format into memory.
            </summary>
        </member>
        <member name="M:Fusee.Engine.MeshReader.Double_Parse(System.String)">
            <summary>
                Replacement for double.Parse(s, [InvariantCulture])
                Hack needed for JSIL.
            </summary>
            <param name="s">string to parse</param>
            <returns>A double number</returns>
        </member>
        <member name="M:Fusee.Engine.MeshReader.ReadWavefrontObj(System.IO.TextReader)">
            <summary>
                Parses the contents of the TextReader object passed to the method and tries to
                interpret the contents as a <a href="http://en.wikipedia.org/wiki/Wavefront_.obj_file">Wavefront obj</a> file.
                Creates a Mesh object from the contents.
            </summary>
            <param name="tr">The initialized TextReader (can be either a StreamReader or a StringReader)</param>
            <returns>The newly created Mesh object</returns>
        </member>
        <member name="M:Fusee.Engine.MeshReader.LoadMesh(System.String)">
            <summary>
                This method loads an object file and returns it as a mesh.
            </summary>
            <param name="path">Path to the object to load</param>
            <returns>The newly created Mesh object</returns>
        </member>
        <member name="M:Fusee.Engine.MeshReader.FilteredSplit(System.String,System.Char[])">
            <summary>
                This method is used to split a string in a list of strings based on the separator passed to the method.
            </summary>
            <param name="strIn">The string.</param>
            <param name="separator">The separator.</param>
            <returns>An array of string with all separated values.</returns>
        </member>
        <member name="T:Fusee.Engine.MoreShaders">
            <summary>
                Contains all pixel and vertex shaders and a method to create a ShaderProgram in Rendercontext.
            </summary>
        </member>
        <member name="M:Fusee.Engine.MoreShaders.GetTextureShader(Fusee.Engine.RenderContext)">
            <summary>
            Creates a simple unlit texture shader in RenderContext.
            </summary>
            <param name="rc">RenderContext.</param>
            <returns>An instance of <see cref="T:Fusee.Engine.ShaderProgram"/> to render a Texture without any lighting.</returns>
        </member>
        <member name="M:Fusee.Engine.MoreShaders.GetDiffuseTextureShader(Fusee.Engine.RenderContext)">
            <summary>
            Creates a simple diffuse texture shader in RenderContext.
            </summary>
            <param name="rc">RenderContext.</param>
            <returns>An instance of <see cref="T:Fusee.Engine.ShaderProgram"/> to render a Texture with diffuse lighting.</returns>
        </member>
        <member name="M:Fusee.Engine.MoreShaders.GetDiffuseColorShader(Fusee.Engine.RenderContext)">
            <summary>
            Creates a diffuse color shader in RenderContext.
            </summary>
            <param name="rc">RenderContext.</param>
            <returns>An instance of <see cref="T:Fusee.Engine.ShaderProgram"/> to render a color with diffuse lighting.</returns>
        </member>
        <member name="M:Fusee.Engine.MoreShaders.GetSpecularShader(Fusee.Engine.RenderContext)">
            <summary>
            Creates a specular texture shader in RenderContext.
            </summary>
            <param name="rc">RenderContext.</param>
            <returns>An instance of <see cref="T:Fusee.Engine.ShaderProgram"/> to render a Texture with specular lighting.</returns>
        </member>
        <member name="M:Fusee.Engine.MoreShaders.GetBumpDiffuseShader(Fusee.Engine.RenderContext)">
            <summary>
            Creates a bumpmap and diffuse texture shader in RenderContext.
            </summary>
            <param name="rc">RenderContext.</param>
            <returns>An instance of <see cref="T:Fusee.Engine.ShaderProgram"/> to render an object with diffuse lighting and a texture for the surface and another for the bump effect.</returns>
        </member>
        <member name="T:Fusee.Engine.RigidBody">
            <summary>
            The RigidBody class ...
            </summary>
        </member>
        <member name="M:Fusee.Engine.RigidBody.Rotation">
            <summary>
            The orientation of the rigidbody in world space stored as a Quaternion.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RigidBody.ApplyForce(Fusee.Math.float3,Fusee.Math.float3)">
            <summary>
            Adds a force to the rigidbody. As a result the rigidbody will start moving.
            </summary>
            <param name="force"></param>
            <param name="relPos"></param>
        </member>
        <member name="P:Fusee.Engine.RigidBody.ApplyTorque">
            <summary>
            Adds a torque to the rigidbody.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RigidBody.ApplyCentralImpulse">
            <summary>
            Adds an impulse 
            </summary>
        </member>
        <member name="T:Fusee.Engine.ShaderMaterial">
            <summary>
            Handles settings of shaderprograms. Currently not implemented.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ShaderMaterial.#ctor(Fusee.Engine.ShaderProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.ShaderMaterial"/> class.
            </summary>
            <param name="program">The <see cref="T:Fusee.Engine.ShaderProgram"/>.</param>
        </member>
        <member name="M:Fusee.Engine.ShaderMaterial.GetShader">
            <summary>
            Gets the shaderprogram.
            </summary>
            <returns>A <see cref="T:Fusee.Engine.ShaderProgram"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.ShaderMaterial.UpdateMaterial(Fusee.Engine.RenderContext)">
            <summary>
            Updates the material.
            </summary>
            <param name="rc">The rc.</param>
        </member>
        <member name="T:Fusee.Engine.ShaderProgram">
            <summary>
            Instances of this class represent a pair of a Vertex and a Pixel shader code, both compiled an 
            uploaded to the gpu ready to be used. 
            </summary>
            <remarks>See <see cref="M:Fusee.Engine.RenderContext.CreateShader(System.String,System.String)"/> how to create instances and 
            <see cref="M:Fusee.Engine.RenderContext.SetShader(Fusee.Engine.ShaderProgram)"/> how to use instances as the current shaders.</remarks>
        </member>
        <member name="M:Fusee.Engine.ShaderProgram.#ctor(Fusee.Engine.IRenderContextImp,Fusee.Engine.IShaderProgramImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.ShaderProgram"/> class.
            </summary>
            <param name="renderContextImp">The <see cref="T:Fusee.Engine.IRenderContextImp"/>.</param>
            <param name="shaderProgramImp">The <see cref="T:Fusee.Engine.IShaderProgramImp"/>.</param>
        </member>
        <member name="M:Fusee.Engine.ShaderProgram.GetShaderParam(System.String)">
            <summary>
            Gets the shader parameter.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <returns>A <see cref="T:Fusee.Engine.IShaderParam"/>.</returns>
        </member>
        <member name="T:Fusee.Engine.Network">
            <summary>
            Core network object. Handles all connections by accessing underlying interface implementations.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Network.StartPeer">
            <summary>
            Initializes the peer on default port 14242.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Network.StartPeer(System.Int32)">
            <summary>
            Initializes the peer on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Network.OpenConnection(System.String)">
            <summary>
            Opens the connection on default port 14242 and specified host.
            </summary>
            <param name="host">The host (e.g. 127.0.0.1).</param>
        </member>
        <member name="M:Fusee.Engine.Network.OpenConnection(System.Int32)">
            <summary>
            Opens the connection on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Network.OpenConnection(System.String,System.Int32)">
            <summary>
            Opens the connection on specified port and host.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Network.CloseConnection">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Network.SendMessage(System.Byte[])">
            <summary>
            Sends the message with <see cref="T:Fusee.Engine.MessageDelivery"/>.RealiableOrdered on channel 0.
            </summary>
            <param name="msg">The message in byte[].</param>
            <returns>True if the message arrived.</returns>
        </member>
        <member name="M:Fusee.Engine.Network.SendMessage(System.Byte[],Fusee.Engine.MessageDelivery,System.Int32)">
            <summary>
            Sends the message with options.
            </summary>
            <param name="msg">The message in byte[].</param>
            <param name="msgDelivery">The <see cref="T:Fusee.Engine.MessageDelivery"/>.</param>
            <param name="channelID">The channel identifier.</param>
            <returns>True if the message arrived.</returns>
        </member>
        <member name="M:Fusee.Engine.Network.SendDiscoveryMessage">
            <summary>
            Sends the discovery message on default port 14242.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Network.SendDiscoveryMessage(System.Int32)">
            <summary>
            Sends the discovery message on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Network.CloseDevice">
            <summary>
            Closes all network connections.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Network.Status">
            <summary>
            Gets or sets the status of the network. <see cref="T:Fusee.Engine.NetStatusValues"/>.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Fusee.Engine.Network.Config">
            <summary>
            Gets or sets the configuration. <see cref="T:Fusee.Engine.NetConfigValues"/>
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Fusee.Engine.Network.Connections">
            <summary>
            Gets all connections of type <see cref="T:Fusee.Engine.INetworkConnection"/>.
            </summary>
            <value>
            The connections.
            </value>
        </member>
        <member name="P:Fusee.Engine.Network.LocalIP">
            <summary>
            Gets the local ip. Do not use this often due to performance reasons.
            </summary>
            <value>
            The local ip as a string, e.g. 127.0.0.1
            </value>
        </member>
        <member name="P:Fusee.Engine.Network.IncomingMsgCount">
            <summary>
            Gets the incoming message's count.
            </summary>
            <value>
            The incoming message count.
            </value>
        </member>
        <member name="P:Fusee.Engine.Network.IncomingMsg">
            <summary>
            Gets the incoming <see cref="T:Fusee.Engine.INetworkMsg"/>.
            </summary>
            <value>
            The incoming message.
            </value>
        </member>
        <member name="E:Fusee.Engine.Network.OnConnectionUpdate">
            <summary>
            Occurs when [on connection update] occurs and passes the event over to the network interface implementation.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Network.Instance">
            <summary>
            Provides the Instance of the Network Class.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="F:Fusee.Engine.ParticleEmitter.ParticleMesh">
            <summary>
            The entire particle system consists of one mesh.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ParticleEmitter.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,System.Double,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ParticleEmittter class.
            </summary>
            <param name="myCount"></param>
            <param name="myLifeMin"></param>
            <param name="myLifeMax"></param>
            <param name="myMinSize"></param>
            <param name="myMaxSize"></param>
            <param name="myRotation"></param>
            <param name="myTransparency"></param>
            <param name="myRandPosX"></param>
            <param name="myRandPosY"></param>
            <param name="myRandPosZ"></param>
            <param name="myRandVelX"></param>
            <param name="myRandVelY"></param>
            <param name="myRandVelZ"></param>
            <param name="myGravityX"></param>
            <param name="myGravityY"></param>
            <param name="myGravityZ"></param>
        </member>
        <member name="M:Fusee.Engine.ParticleEmitter.Tick(System.Double)">
            <summary>
            This method fills the particleList with data, creates the particle mesh and manipulates the information of particleList.
            </summary>
            <param name="deltaTime"></param>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.LifeMin">
            <summary>
            Gets and sets the minimum life of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.LifeMax">
            <summary>
            Gets and sets the maximum life of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.MinSize">
            <summary>
            Gets and sets the minimum size of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.MaxSize">
            <summary>
            Gets and sets the maximum size of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.Transparency">
            <summary>
            Gets and sets the transparency of particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandPosX">
            <summary>
            Gets and sets the random position on the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandPosY">
            <summary>
            Gets and sets the random position on the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandPosZ">
            <summary>
            Gets and sets the random position on the z-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandVelX">
            <summary>
            Gets and sets the random velocity towards the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandVelY">
            <summary>
            Gets and sets the random velocity towards the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.RandVelZ">
            <summary>
            Gets and sets the random velocity towards the z-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.GravityX">
            <summary>
            Gets and sets the gravity towards the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.GravityY">
            <summary>
            Gets and sets the gravity towards the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.ParticleEmitter.GravityZ">
            <summary>
            Gets and sets the gravity towards the z-axis.
            </summary>
        </member>
        <member name="T:Fusee.Engine.RenderCanvas">
            <summary>
            A render canvas object references the physical output screen space real estate (e.g. the rendering window).
            A typical Game application will inherit from this class and overrite methods to implement your 
            user code to be performed on events like initialization, resize,
            and display refresh.
            In the future, it will be likely that this class' functionality will be divided at two different places with
            one containing the more view oriented aspects and the other containing the more application oriented aspects.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.InitImplementors">
            <summary>
            The RenderCanvas constructor. Depending on the implementation this constructor instantiates a 3D viewing window or connects a 3D 
            render context to an existing part of the application window.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.GetAppName">
            <summary>
            Gets the name of the app.
            </summary>
            <returns>Name of the app as string.</returns>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.InitCanvas">
            <summary>
            Inits the canvas for the rendering loop.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.RenderAFrame">
            <summary>
            Callback method to invoke user code for rendering a frame.
            </summary>
            <remarks>
            Override this method in inherited classes of RenderCanvas to render 3D contents. Typically, an application will
            use the render context (<see cref="P:Fusee.Engine.RenderCanvas.RC"/>) to achieve this. Consider the code you implement here as the body of the
            application's rendering loop.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.Init">
            <summary>
            Callback method to invoke user code after initialization of the render canvas.
            </summary>
            <remarks>
            Override this method in inherited classes of RenderCanvas to apply initialization code. Typically, an application
            will call one-time initialization code on the render context (<see cref="P:Fusee.Engine.RenderCanvas.RC"/>) to set render states.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.UnLoad">
            <summary>
            Used to release the ressources of all audio and network instances.
            All audio and network ressources get reset.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.Resize">
            <summary>
            Callback method to invoke user code when the render canvas size changes.
            </summary>
            <remarks>
            Override this method in inherited classes of RenderCanvas to apply window resize code. Typically, an application
            will change the projection matrix of the render context (<see cref="P:Fusee.Engine.RenderCanvas.RC"/>) to match the new aspect ratio.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.SetCursor(Fusee.Engine.CursorType)">
            <summary>
            Set the cursor (the mouse pointer image) to one of the pre-defined types
            </summary>
            <param name="cursorType">The type of the cursor to set.</param>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.OpenLink(System.String)">
            <summary>
            Opens the given URL in the user's standard web browser. The link MUST start with "http://".
            </summary>
            <param name="link">The URL to open</param>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.Run">
            <summary>
            Runs this instance.
            </summary>
            <remarks>
            Users should call this method of their RenderCanvas instance to start the application. The RenderCanvas will then do all
            necessary initialization, call the Init method and enter the application main loop.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.Present">
            <summary>
            Presents the contents of the backbuffer on the visible part of this render canvas.
            </summary>
            <remarks>
            Call this method from your rendering code implementation <see cref="M:Fusee.Engine.RenderCanvas.RenderAFrame"/> after rendering geometry on 
            the rendering context.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.VideoWall(System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Sets the data for a video wall.
            </summary>
            <param name="monitorsHor">Monitor count on horizontal axis.</param>
            <param name="monitorsVert">Monitor count on vertical axis.</param>
            <param name="val">Activate or deactivate videoWall mode.</param>
            <param name="borderHidden">Activate or deactivate videoWall mode.</param>
        </member>
        <member name="M:Fusee.Engine.RenderCanvas.SetWindowSize(System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Sets the size of the output window for desktop development.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="borderHidden">Show the window border or not.</param>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.CanvasImplementor">
            <summary>
            Gets or sets the canvas implementor.
            </summary>
            <value>
            The canvas implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.ContextImplementor">
            <summary>
            Gets or sets the RenderContext implementor.
            </summary>
            <value>
            The context implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.InputImplementor">
            <summary>
            Gets or sets the input implementor.
            </summary>
            <value>
            The input implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.AudioImplementor">
            <summary>
            Gets or sets the audio implementor.
            </summary>
            <value>
            The audio implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.InputDriverImplementor">
            <summary>
            Gets or sets the inputdevice implementor.
            </summary>
            <value>
            The inputdevice implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.RC">
            <summary>
            Returns the render context object.
            </summary>
            <value>
            Use the render context (<see cref="T:Fusee.Engine.RenderContext"/>) to fill the render canvas with 3d contents.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.Width">
            <summary>
            Retrieves the width of the canvas.
            </summary>
            <value>
            The width in pixels.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.Height">
            <summary>
            Retrieves the height of the canvas.
            </summary>
            <value>
            The height in pixels.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.VSync">
            <summary>
            Gets or sets a value indicating whether VSync is active.
            </summary>
            <value>
              <c>true</c> if VSync is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.Blending">
            <summary>
            Gets or sets a value indicating whether Blending is enabled.
            </summary>
            <value>
              <c>true</c> if Blending is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderCanvas.Fullscreen">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Fusee.Engine.RenderCanvas"/> is fullscreen.
            </summary>
            <value>
              <c>true</c> if fullscreen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Fusee.Engine.RenderContext">
            <summary>
            The render context contains all functions necessary to manipulate the underlying rendering hardware. Use this class' elements
            to render geometry to the RenderCanvas associated with this context. If you have worked with OpenGL or DirectX before you will find
            many similarities in this class' methods and properties.
            </summary>
        </member>
        <member name="M:Fusee.Engine.RenderContext.#ctor(Fusee.Engine.IRenderContextImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.RenderContext"/> class.
            </summary>
            <param name="rci">The <see cref="T:Fusee.Engine.IRenderContextImp"/>.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.CreateImage(System.Int32,System.Int32,System.String)">
            <summary>
            Creates a new Image with a specified size and color.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="bgColor">The color of the image. Value must be JS compatible.</param>
            <returns>An ImageData struct containing all necessary information for further processing.</returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.TextOnImage(Fusee.Engine.ImageData,System.String,System.Single,System.String,System.String,System.Single,System.Single)">
            <summary>
            Maps a specified text with on an image.
            </summary>
            <param name="imgData">The ImageData struct with the PixelData from the image.</param>
            <param name="fontName">The name of the text-font.</param>
            <param name="fontSize">The size of the text-font.</param>
            <param name="text">The text that sould be mapped on the iamge.</param>
            <param name="textColor">The color of the text-font.</param>
            <param name="startPosX">The horizontal start-position of the text on the image.</param>
            <param name="startPosY">The vertical start-position of the text on the image.</param>
            <returns>An ImageData struct containing all necessary information for further processing</returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.CreateTexture(Fusee.Engine.ImageData)">
            <summary>
            Creates a new texture and binds it to the shader.
            </summary>
            <remarks>
            Method should be called after LoadImage method to process
            the BitmapData an make them available for the shader.
            </remarks>
            <param name="imgData">An ImageData struct, containing necessary information for the upload to the graphics card.</param>
            <returns>
            An <see cref="T:Fusee.Engine.ITexture"/> that can be used for texturing in the shader.
            </returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.DisableTexture">
            <summary>
            Creates a white Texture with 1x1 pixel size.
            </summary>
            <returns>
            An <see cref="T:Fusee.Engine.ITexture"/> that can be used for texturing in the shader.
            </returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.LoadImage(System.String)">
            <summary>
            Loads an image file from disk and creates a new Bitmap-object out of it.
            </summary>
            <remarks>
            This is the first step for the texturing Process.
            The Bitmap-bits get locked in the memory and are made available for
            further processing. The returned ImageData-Struct can be used in the
            CreateTexture method.
            </remarks>
            <param name="filename">Path to the image file</param>
            <returns>
            An ImageData struct with all necessary information for the texture-binding process.
            </returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParamTexture(Fusee.Engine.IShaderParam,Fusee.Engine.ITexture)">
            <summary>
            Sets a Shader Parameter to a created texture.
            </summary>
            <param name="param">Shader Parameter used for texture binding.</param>
            <param name="texId">An ITexture probably returned from CreateTexture() method.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.LoadFont(System.String,System.UInt32)">
            <summary>
            Loads a font file (*.ttf) and processes it with the given font size.
            </summary>
            <param name="filename">The filename.</param>
            <param name="size">The font size.</param>
            <returns>An <see cref="T:Fusee.Engine.IFont"/> containing all necessary information for further processing.</returns>
            <exception cref="T:System.Exception">Font not found: "filename"</exception>
        </member>
        <member name="M:Fusee.Engine.RenderContext.LoadSystemFont(System.String,System.UInt32)">
            <summary>
            Loads a system font from the system's font folder and processes it with the given font size.
            </summary>
            <param name="fontname">The name of a system font (the filename, e.g. "calibri").</param>
            <param name="size">The font size.</param>
            <returns>An <see cref="T:Fusee.Engine.IFont"/> containing all necessary information for further processing.</returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.FixTextKerning(Fusee.Engine.IFont,Fusee.Math.float3[],System.String,System.Single)">
            <summary>
            Fixes the kerning of a text (if possible).
            </summary>
            <param name="font">The <see cref="T:Fusee.Engine.IFont"/> containing information about the font.</param>
            <param name="vertices">The vertices.</param>
            <param name="text">The text.</param>
            <param name="scaleX">The scale x (OpenGL scaling factor).</param>
            <returns>The fixed vertices as an array of <see cref="T:Fusee.Math.float3"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLight(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Int32,System.Int32)">
            <summary>
            Sets the directional or point lights information.
            </summary>
            <param name="v3">The lights direction or position. This depends on the light type.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="type">The type of the light. 0=directional, 1=point.</param>
            <param name="id">The identifier. A maximum of 8 lights is recommended due to portability.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLight(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Int32,System.Int32)">
            <summary>
            Sets the spotlights information.
            </summary>
            <param name="position">The light position.</param>
            <param name="direction">The light direction.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="type">The light type.</param>
            <param name="id">The identifier.A maximum of 8 lights is recommended due to portability.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightActive(System.Int32,System.Single)">
            <summary>
            Activates the light with the given index.
            </summary>
            <param name="lightInx">The light to activate. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="active">1 - activate the light. 0 - deactiv</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightAmbient(System.Int32,Fusee.Math.float4)">
            <summary>
            Sets the ambient color component on the light with the given index.
            </summary>
            <param name="lightInx">The light to set the ambient color on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="ambientColor">
            The ambient color to be emitted by the given light. The value is interpreted as a (Red, Green, Blue, Alpha) quadruple with
            component values ranging from 0.0f to 1.0f. The Alpha component will be ignored.
            </param>
            <remarks>
            An ambient light component represents a fixed-intensity and fixed-color light that affects all parts of all objects in the scene equally.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightDiffuse(System.Int32,Fusee.Math.float4)">
            <summary>
            Sets the diffuse color component on the light with the given index.
            </summary>
            <param name="lightInx">The light to set the diffuse color on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="diffuseColor">
            The diffuse color to be emitted by the given light. The value is interpreted as a (Red, Green, Blue, Alpha) quadruple with
            component values ranging from 0.0f to 1.0f. The Alpha component will be ignored.
            </param>
            <remarks>
            A diffuse light component results in different parts of objects shaded with different intensites based on the angle of the incoming
            light ray at each given spot on the object surface. This component is what makes objects look "3D" - e.g. coloring the different faces of a cube with
            different intensities or creating brightness gradients on curved surfaces like a sphere.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightSpecular(System.Int32,Fusee.Math.float4)">
            <summary>
            Sets the specular color component on the light with the given index.
            </summary>
            <param name="lightInx">The light to set the specular color on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="specularColor">
            The specular color to be emitted by the given light. The value is interpreted as a (Red, Green, Blue, Alpha) quadruple with
            component values ranging from 0.0f to 1.0f. The Alpha component will be ignored.
            </param>
            <remarks>
            A specular light component results in highlights created on the lit surfaces where the light source is mirrored into the viewers' eye.
            Bright highlights with small radii make objects' materials look glossy. The specular light component adds realism to 3D scenes in
            walk-through animations because the specualar light's intensity at a given point on an object's surface depends not only on the
            incoming light ray angle but also on the positon of the viewer. With a moving camera, also the specular highlights move on the
            objects' surfaces.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightPosition(System.Int32,Fusee.Math.float3)">
            <summary>
            Sets the position of the light with the given index.
            </summary>
            <param name="lightInx">The light to set the position on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="position">The position of the light in 3D space.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightDirection(System.Int32,Fusee.Math.float3)">
            <summary>
            Sets the direction of the light with the given index.
            </summary>
            <param name="lightInx">The light to set the direction on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="direction">The direction vector into which the light emits rays.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetLightSpotAngle(System.Int32,System.Single)">
            <summary>
            Sets the opening angle of the spot light with the given index.
            </summary>
            <param name="lightInx">The light to set the direction on. Can range from 0 to 7. Up to eight lights are supported.</param>
            <param name="angle">The opening angle of the spotlight in degree.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.CreateShader(System.String,System.String)">
            <summary>
            Creates a shader object from vertex shader source code and pixel shader source code.
            </summary>
            <param name="vs">A string containing the vertex shader source.</param>
            <param name="ps">A string containing the pixel (fragment) shader source code.</param>
            <returns>A shader program object identifying the combination of the given vertex and pixel shader.</returns>
            <remarks>
            Currently only shaders in GLSL (or rather GLSL/ES) source language(s) are supported.
            The result is already compiled to code executable on the GPU. <see cref="M:Fusee.Engine.RenderContext.SetShader(Fusee.Engine.ShaderProgram)"/>
            to activate the result as the current shader used for rendering geometry passed to the RenderContext.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShader(Fusee.Engine.ShaderProgram)">
            <summary>
            Activates the passed shader program as the current shader for geometry rendering.
            </summary>
            <param name="program">The shader to apply to mesh geometry subsequently passed to the RenderContext</param>
            <seealso cref="M:Fusee.Engine.RenderContext.CreateShader(System.String,System.String)"/>
            <seealso cref="M:Fusee.Engine.RenderContext.Render(Fusee.Engine.Mesh)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)">
            <summary>
            Get a list of (uniform) shader parameters accessed by the given shader.
            </summary>
            <param name="program">The shader program to query for parameters.</param>
            <returns>
            A list of shader parameters accessed by the shader code of the given shader program. The parameters listed here
            are the so-called uniform parameters of the shader (in contrast to the varying parameters). The list contains all
            uniform parameters that are accessed by either the vertex shader, the pixel shader, or both shaders compiled into
            the given shader.
            </returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)">
            <summary>
            Returns an identifiyer for the named (uniform) parameter used in the specified shader program.
            </summary>
            <param name="program">The <see cref="T:Fusee.Engine.ShaderProgram"/> using the parameter.</param>
            <param name="paramName">Name of the shader parameter.</param>
            <returns>A <see cref="T:Fusee.Engine.IShaderParam"/> object to identify the given parameter in subsequent calls to SetShaderParam.</returns>
            <remarks>
            The returned handle can be used to assign values to a (uniform) shader paramter.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.GetParamValue(Fusee.Engine.ShaderProgram,Fusee.Engine.IShaderParam)">
            <summary>
            Gets the value of a shader parameter.
            </summary>
            <param name="program">The <see cref="T:Fusee.Engine.ShaderProgram"/>.</param>
            <param name="handle">The <see cref="T:Fusee.Engine.IShaderParam"/>.</param>
            <returns>The float value.</returns>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,System.Single)">
            <summary>
            Sets the specified shader parameter to a float value.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The float value that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,Fusee.Math.float2)">
            <summary>
            Sets the shader parameter to a float2 value.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The float2 value that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,Fusee.Math.float3)">
            <summary>
            Sets the shader parameter to a float3 value.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The float3 value that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,Fusee.Math.float4)">
            <summary>
            Sets the shader parameter to a float4 value.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The float4 value that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,Fusee.Math.float4x4)">
            <summary>
            Sets the shader parameter to a float4x4 matrixvalue.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The float4x4 matrix that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetShaderParam(Fusee.Engine.IShaderParam,System.Int32)">
            <summary>
            Sets the shader parameter to a integer value.
            </summary>
            <param name="param">The <see cref="T:Fusee.Engine.IShaderParam"/> identifier.</param>
            <param name="val">The integer value that should be assigned to the shader parameter.</param>
            <remarks>
            <see cref="M:Fusee.Engine.RenderContext.GetShaderParam(Fusee.Engine.ShaderProgram,System.String)"/> to see how to retrieve an identifier for
            a given uniform parameter name used in a shader program.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.GetShaderParamList(Fusee.Engine.ShaderProgram)"/>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetRenderState(Fusee.Engine.RenderState,System.UInt32)">
            <summary>
            Apply a single render state to the render context. All subsequent rendering will be
            performed using the currently set state unless it is changed to a different value.
            </summary>
            <param name="renderState">One of the <see cref="T:Fusee.Engine.RenderState"/> enumaration values.</param>
            <param name="value">An unsigned integer value representing the value the state should be set to.
             Depending on the renderState, this value can be interpreted as an integer value, a float value, a
            boolean value, or even a color.  </param>
            <remarks>This method is close to the underlying implementation layer and might be awkward to use
            due to the ambiguity of the value parameter type. If you want type-safe state values and also 
            want to set a couple of states at the same time, try the more 
            elaborate <see cref="M:Fusee.Engine.RenderContext.SetRenderState(Fusee.Engine.RenderStateSet)"/> method.</remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.SetRenderState(Fusee.Engine.RenderStateSet)">
            <summary>
            Apply a number of render states to this render context. All subsequent rendering will be
            performed using the currently set state set unless one of its values it is changed. Use this 
            method to change more than one render state at once. 
            </summary>
            <param name="renderStateSet">A set of render states with their respective values to be set.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.Render(Fusee.Engine.Mesh)">
            <summary>
            Renders the specified mesh.
            </summary>
            <param name="m">The mesh that should be rendered.</param>
            <remarks>
            Passes geometry to be pushed through the rendering pipeline. <see cref="T:Fusee.Engine.Mesh"/> for a description how geometry is made up.
            The geometry is transformed and rendered by the currently active shader program.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.DebugLine(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4)">
            <summary>
            Draws a Debug Line in 3D Space by using a start and end point (float3).
            </summary>
            <param name="start">The startpoint of the DebugLine.</param>
            <param name="end">The endpoint of the DebugLine.</param>
            <param name="color">The color of the DebugLine.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.Clear(Fusee.Engine.ClearFlags)">
            <summary>
            Erases the contents of the speciefied rendering buffers.
            </summary>
            <param name="flags">A combination of flags specifying the rendering buffers to clear.</param>
            <remarks>
            Calling this method erases all contents of the rendering buffers. A typical use case for this method
            is to erase the contents of the color buffer and the depth buffer (z-buffer) before rendering starts
            at the beginning of a rendering loop. Thus, rendering the current frame starts with an empty color and
            z-buffer. <see cref="T:Fusee.Engine.ClearFlags"/> for a list of possible buffers to clear. Make sure to use the bitwisee
            or-operator (|) to combine several buffers to clear.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.GetBufferContent(Fusee.Engine.Rectangle,Fusee.Engine.ITexture)">
            <summary>
            Gets the content of the buffer and passes it to the <see cref="T:Fusee.Engine.IRenderCanvasImp"/>.
            </summary>
            <param name="quad">The <see cref="T:Fusee.Engine.Rectangle"/>.</param>
            <param name="texId">The <see cref="T:Fusee.Engine.ITexture"/>.</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.Viewport(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the rectangular output region within the output buffer(s).
            </summary>
            <param name="x">leftmost pixel of the rectangular output region within the output buffer.</param>
            <param name="y">topmost pixel of the rectangular output region within the output buffer.</param>
            <param name="width">horizontal size (in pixels) of the output region.</param>
            <param name="height">vertical size (in pixels) of the ouput region.</param>
            <remarks>
            Setting the Viewport limits the rendering ouptut to the specified rectangular region.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.RenderContext.ColorMask(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Enable or disable Color channels to be written to the frame buffer (final image).
            Use this function as a color channel filter for the final image.
            </summary>
            <param name="red">if set to <c>true</c> [red].</param>
            <param name="green">if set to <c>true</c> [green].</param>
            <param name="blue">if set to <c>true</c> [blue].</param>
            <param name="alpha">if set to <c>true</c> [alpha].</param>
        </member>
        <member name="M:Fusee.Engine.RenderContext.Frustum(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Specify the View Frustum by settings its left,right,bottom,top,near and far planes. 
            Image the View frustum as a cubical form that determines the Cameras 3D view along its far plane. 
            </summary>
            <param name="left">The left plane.</param>
            <param name="right">The right plane.</param>
            <param name="bottom">The bottom plane.</param>
            <param name="top">The top plane.</param>
            <param name="zNear">The z near plane.</param>
            <param name="zFar">The z far plane.</param>
        </member>
        <member name="P:Fusee.Engine.RenderContext.View">
            <summary>
            The View matrix used by the rendering pipeline.
            </summary>
            <value>
            The view matrix.
            </value>
            <remarks>
            This matrix is also reffered often as the camera transformation(not the projection). 
            It describes the orientation of the view that is used to render a scene.
            You can use <see cref="M:Fusee.Math.float4x4.LookAt(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float3)"/> to create a valid view matrix and analyze how it is build up.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.Model">
            <summary>
            The Model matrix used by the rendering pipeline.
            </summary>
            <value>
            The model matrix.
            </value>
            <remarks>
            Model coordinates are the coordinates directly taken from the model (the mesh geometry - <see cref="T:Fusee.Engine.Mesh"/>).
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.ModelView">
            <summary>
            The ModelView matrix used by the rendering pipeline.
            </summary>
            <value>
            The 4x4 ModelView matrix defining the transformation applied to model coordinates yielding view coordinates.
            </value>
            <remarks>
            Model coordinates are the coordinates directly taken from the model (the mesh geometry - <see cref="T:Fusee.Engine.Mesh"/>). The rendering pipeline
            transforms these coordinates into View coordinates. Further down the pipeline the coordinates will be transformed to screen coordinates to allow the
            geometry to be rendered to pixel positions on the screen. The ModelView matrix defines the transformations performed on the original model coordinates
            to yield view coordinates. In most cases the matrix is a composition of several translations, rotations, and scale operations.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.Projection">
            <summary>
            The projection matrix used by the rendering pipeline
            </summary>
            <value>
            The 4x4 projection matrix applied to view coordinates yielding clip space coordinates.
            </value>
            <remarks>
            View coordinates are the result of the ModelView matrix multiplied to the geometry (<see cref="P:Fusee.Engine.RenderContext.ModelView"/>).
            The coordinate system of the view space has its origin in the camera center with the z axis aligned to the viewing direction, and the x- and
            y axes aligned to the viewing plane. Still, no projection from 3d space to the viewing plane has been performed. This is done by multiplying
            view coordinate geometry wihth the projection matrix. Typically, the projection matrix either performs a parallel projection or a perspective
            projection.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.ModelViewProjection">
            <summary>
            The combination of the ModelView and Projection matrices.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix multiplaction of the ModelView and the Projection matrix.
            </value>
            <remarks>
            <see cref="P:Fusee.Engine.RenderContext.ModelView"/> and <see cref="P:Fusee.Engine.RenderContext.Projection"/>.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvView">
            <summary>
            Gets the inverted View matrix.
            </summary>
            <value>
            The inverted view matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvModel">
            <summary>
            Gets the inverted Model matrix.
            </summary>
            <value>
            The inverted Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModel"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvModelView">
            <summary>
            The inverse of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModelView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvProjection">
            <summary>
            The inverse of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvModelViewProjection">
            <summary>
            The inverse of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.TransView">
            <summary>
            The transpose of the View matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the View matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.TransModel">
            <summary>
            The transpose of the Model matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModel"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.TransModelView">
            <summary>
            The transpose of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModelView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.TransProjection">
            <summary>
            The transpose of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.TransModelViewProjection">
            <summary>
            The transpose of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvTransView">
            <summary>
            The inverse transpose of the View matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the View matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original View matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvView"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvTransModel">
            <summary>
            The inverse transpose of the Model matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original Model matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModel"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModel"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvTransModelView">
            <summary>
            The inverse transpose of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original ModelView matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModelView"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModelView"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvTransProjection">
            <summary>
            The inverse transpose of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original Projection matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvProjection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.InvTransModelViewProjection">
            <summary>
            The inverse transpose of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original ModelViewProjection matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.InvModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.RenderContext.TransModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.ClearColor">
            <summary>
            The color to use when clearing the color buffer.
            </summary>
            <value>
            The color value is interpreted as a (Red, Green, Blue, Alpha) quadruple with
            component values ranging from 0.0f to 1.0f.
            </value>
            <remarks>
            This is the color that will be copied to all pixels in the output color buffer when Clear is called on the render context.
            </remarks>
            <seealso cref="M:Fusee.Engine.RenderContext.Clear(Fusee.Engine.ClearFlags)"/>
        </member>
        <member name="P:Fusee.Engine.RenderContext.ClearDepth">
            <summary>
            The depth value to use when clearing the color buffer.
            </summary>
            <value>
            Typically set to the highest possible depth value. Typically ranges between 0 and 1.
            </value>
            <remarks>
            This is the depth (z-) value that will be copied to all pixels in the depth (z-) buffer when Clear is called on the render context.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderContext.CurrentShader">
            <summary>
            Gets the current shader.
            </summary>
            <value>
            The current shader.
            </value>
        </member>
        <member name="P:Fusee.Engine.RenderContext.DebugLinesEnabled">
            <summary>
            Gets or sets a value indicating whether [debug lines enabled].
            </summary>
            <value>
              <c>true</c> if [debug lines enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Fusee.Engine.RenderStateSet">
            <summary>
            Use instances of this class to store a set of render states that need to be applied as a whole. 
            Instances are used in the effects system to set a couple of states before a render pass is performed.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.FillMode">
            <summary>
            A value from the <see cref="T:Fusee.Engine.FillMode"/> enumeration that represents the fill mode to apply when rendering triangles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.CullMode">
            <summary>
            A value from the <see cref="T:Fusee.Engine.Cull"/> enumeration specifying if and how to cull the two different sides of a triangle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.Clipping">
            <summary>
            Enables or disables primitive (triangle) clipping. Set to true to enable primitive clipping, or false to disable it.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable">
            <summary>
            Set to true to enable alpha-blended transparency, or false to disable it.
            The type of alpha blending is determined by the <see cref="P:Fusee.Engine.RenderStateSet.SourceBlend"/> and <see cref="P:Fusee.Engine.RenderStateSet.DestinationBlend"/> render states.
            </summary>
            <remarks>
            Blending describes the process how the pixel generated by the pixel shader is written into the render target buffer. Typically
            it is just copied at its respective pixel position, but several operations are possible to perform a calculation between the 
            pixel vlaue (rgb and a) already in the buffer and the pixel value (rgb and a) created by the pixel shader. The general blending
            assignment is  (always independent for rgb and alpha): 
            <code>
                 OUTrgb = SRCrgb * SourceBlend       {BlendOperation: [+|-|-inv|min|max]}        DSTrgb * DestinationBlend;
                 OUTa   = SRCa   * SourceBlendAlpha  {BlendOperationAlpha: [+|-|-inv|min|max]}   DSTa   * DestinationBlendAlpha;
            </code>
            where:
            <list type="bullet">
            <item><description>OUT: The new pixel written to the output buffer</description></item>
            <item><description>SRC: The pixel generated by the pixel shader</description></item>
            <item><description>DST: The pixel already in the output buffer</description></item>
            <item><description>SourceBlend: See the <see cref="P:Fusee.Engine.RenderStateSet.SourceBlend"/> attribute</description></item>
            <item><description>DestinationBlend: See the <see cref="P:Fusee.Engine.RenderStateSet.DestinationBlend"/> attribute</description></item>
            <item><description>SourceBlendAlpha: See the <see cref="P:Fusee.Engine.RenderStateSet.SourceBlendAlpha"/> attribute</description></item>
            <item><description>DestinationBlendAlpha: See the <see cref="P:Fusee.Engine.RenderStateSet.DestinationBlendAlpha"/> attribute</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.BlendOperation">
            <summary>
            The blend operation to perform for blending rgb values (one of add, subtract, inverted subtract, max, or min).
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.BlendOperationAlpha">
            <summary>
            The blend operation to perform for blending alpha values (one of add, subtract, inverted subtract, max, or min).
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>  
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.SourceBlend">
            <summary>
            Contains a member of the <see cref="T:Fusee.Engine.Blend"/> enumeration that represents the source. 
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.DestinationBlend">
            <summary>
            Contains a member of the <see cref="T:Fusee.Engine.Blend"/> enumeration that represents the destination. 
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.SourceBlendAlpha">
            <summary>
            A member of the Blend enumeration that represents the source.
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.DestinationBlendAlpha">
            <summary>
            A member of the Blend enumeration that represents the destination.
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.BlendFactor">
            <summary>
            A <see cref="T:Fusee.Math.float4"/> object representing a color used for a constant blend factor during alpha blending.
            </summary>
            <seealso cref="P:Fusee.Engine.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.ZEnable">
            <summary>
            Enables or disables z-buffering (depth buffering).
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.ZFunc">
            <summary>
            Determines the comparison function for the z-buffer test. Valid values are members of the <see cref="T:Fusee.Engine.Compare"/> enumeration.
            The depth value of the pixel is compared to the z-buffer value. If the depth value of the pixel passes the comparison function, the pixel is written.
            </summary>
        </member>
        <member name="P:Fusee.Engine.RenderStateSet.States">
            <summary>
            Enumerate this set of render states for its contents
            </summary>
            <value>An enumerator to be used in loops returning a key and its respective value.</value>
            <example>
            Use this enumerator in loops to query a RenderStateSet's contents.
            <code>
            RenderStateSet aRenderStateSet = ...;
            foreach (var state in aRenderStateSet.States)
                DoSomethingWithState(state.Key, state.Value);
            </code>
            </example>
        </member>
        <member name="T:Fusee.Engine.EffectPassDeclaration">
            <summary>
            An effect pass declaration contains the vertex and pixel shader source code as well as a <see cref="T:Fusee.Engine.RenderStateSet"/>
            declaration for the rendering pass declared by this instance.
            </summary>
        </member>
        <member name="T:Fusee.Engine.ShaderEffect">
            <summary>
            A ShaderEffect contains a list of render passes with each pass item being a combination of a set of render states, and a
            pair of Pixel and Vertex Shader Programs (the code running on the GPU).
            In addition a ShaderEffect contains the actual values for all the shaders' (uniform) variables.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ShaderEffect.#ctor(Fusee.Engine.EffectPassDeclaration[],System.Collections.Generic.IEnumerable{Fusee.Engine.EffectParameterDeclaration})">
            <summary>
            The constructor to create a shader effect.
            </summary>
            <param name="effectPasses">The ordered array of <see cref="T:Fusee.Engine.EffectPassDeclaration"/> items. The first item
            in the array is the first pass applied to rendered geometry, and so on.</param>
            <param name="effectParameters">A list of (uniform) parameters possibliy occurring in one of the shaders in the various passes.
            Each array entry consists of the parameter's name and its initial value. The concrete type of the object also indicates the
            parameter's type.
            </param>
            <remarks>Make sure to list any parameter in any of the different passes' shaders you want to change later on in the effectParameters
            list. Shaders must not contain paramaeters with names listed in the effectParameters but declared with different types than those of 
            the respective default values given here.</remarks>
        </member>
        <member name="M:Fusee.Engine.ShaderEffect.AttachToContext(Fusee.Engine.RenderContext)">
            <summary>
            Attaches this instance to a RenderContext. 
            </summary>
            <param name="rc">The Render Context to attach to.</param>
            <remarks>A ShaderEffect must be attached to a context before you can render geometry with it. The main
            task performed in this method is compiling the provided shader source code and uploading the shaders to
            the gpu under the provided RenderContext.</remarks>
        </member>
        <member name="M:Fusee.Engine.ShaderEffect.DetachFromContext">
            <summary>
            Detaches the shader effect from a given context.
            </summary>
        </member>
        <member name="M:Fusee.Engine.ShaderEffect.RenderMesh(Fusee.Engine.Mesh)">
            <summary>
            Renders geometry on the attached RenderContext using this shader effect. All rendering passes are applied 
            to the geometry in the order of appearance within the <see cref="T:Fusee.Engine.EffectPassDeclaration"/> array provided
            in the constructor.
            </summary>
            <param name="mesh">The mesh to render.</param>
        </member>
        <member name="T:Fusee.Engine.Stereo3DEye">
            <summary>
            The enum for the eye side selection.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Stereo3DEye.Left">
            <summary>
            The left eye = 0.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Stereo3DEye.Right">
            <summary>
            The right eye = 1.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Stereo3DMode">
            <summary>
            The enum for the 3D Mode selection.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Stereo3DMode.Anaglyph">
            <summary>
            The anaglyph mode = 0.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Stereo3DMode.Oculus">
            <summary>
            The oculus rift mode = 1.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Stereo3D">
            <summary>
            Rendering of stereo 3D graphics in anaglyph or oculus rift mode.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.#ctor(Fusee.Engine.Stereo3DMode,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Stereo3D"/> class.
            </summary>
            <param name="mode">The 3D rendering mode. anaglyph=0, oculus=1.</param>
            <param name="width">The width of the render output in pixels.</param>
            <param name="height">The height of the render output in pixels.</param>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.AttachToContext(Fusee.Engine.RenderContext)">
            <summary>
            Attaches the object to a specific <see cref="T:Fusee.Engine.RenderContext"/> object.
            </summary>
            <param name="rc">The <see cref="T:Fusee.Engine.RenderContext"/> object to be used.</param>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.Prepare(Fusee.Engine.Stereo3DEye)">
            <summary>
            Prepares the specified eye side for 3D rendering.
            </summary>
            <param name="eye">The <see cref="T:Fusee.Engine.Stereo3DEye"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.Save">
            <summary>
            Saves this instance.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.Display">
            <summary>
            Displays the result as rendering output on the <see cref="T:Fusee.Engine.RenderContext"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Stereo3D.LookAt3D(Fusee.Engine.Stereo3DEye,Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float3)">
            <summary>
            Aligns the <see cref="T:Fusee.Engine.Stereo3DEye"/> to the target point.
            </summary>
            <param name="eye">The <see cref="T:Fusee.Engine.Stereo3DEye"/>.</param>
            <param name="eyeV">The eye vector.</param>
            <param name="target">The target.</param>
            <param name="up">Up vector.</param>
            <returns>A Matrix that represents the current eye's orientation towards a target point.</returns>
        </member>
        <member name="P:Fusee.Engine.Stereo3D.CurrentEye">
            <summary>
            Gets the current eye.
            </summary>
            <value>
            The current eye side enum. left=0, right=1.
            </value>
        </member>
        <member name="T:Fusee.Engine.Time">
            <summary>
            The Time class provides all time information. It is accessible from everywhere by calling Time.instance.                          
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.FramePerSecondSmooth">
            <summary>
            Provides the average framerate of the last second (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.RealTimeSinceStart">
            <summary>
            Provides the passed time since start of the application uneffected by TimeFlow (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.FramePerSecond">
            <summary>
            Provides the peek framerate, updated every frame (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.Frames">
            <summary>
            Provides the total number of rendered frames (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.DeltaTime">
            <summary>
            Provides the DeltaTime that is effected by the TimeFlow (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.RealDeltaTime">
            <summary>
            Provides the DeltaTime that is uneffected by the TimeFlow (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.TimeSinceStart">
            <summary>
            Provides the passed time since start of the application effected by TimeFlow (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Time.TimeFlow">
            <summary>
            The TimeFlow modifies the speed of the time.
            </summary>
            <remarks>
            0 the time stops.
            1 normal time speed.
            Smaller then 1 time passes slower. 
            Bigger then 1 time passes faster.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Time.Instance">
            <summary>
            Provides the Instance of the Time Class.
            </summary>
        </member>
    </members>
</doc>
