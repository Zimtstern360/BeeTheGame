/* Generated by JSIL v0.7.8 build 970. See http://jsil.org/ for more information. */ 
var $asm00 = JSIL.DeclareAssembly("Examples.SceneViewer, Version=0.1.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm00, $asm00.TypeRef("Examples.SceneViewer.SceneViewer"), "Main", new JSIL.MethodSignature(null, []));

JSIL.DeclareNamespace("Examples");
JSIL.DeclareNamespace("Examples.SceneViewer");
/* class Examples.SceneViewer.SceneViewer */ 

(function SceneViewer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.Fusee.Engine.RenderCanvas)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.Fusee.Engine.GUIButton)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.Fusee.Engine.MouseEventArgs)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm04.Fusee.Math.float4)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.Fusee.Engine.CursorType)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm03.Fusee.Engine.SimpleScene.SceneRenderer)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm07.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm04.Fusee.Math.float4x4)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm04.Fusee.Math.AABBf)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm07.System.Single)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm07.System.Math)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm04.Fusee.Math.float3)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm02.Fusee.Engine.GUIHandler)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.Fusee.Engine.GUIButtonHandler)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm02.Fusee.Engine.GUIImage)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm02.Fusee.Engine.RenderContext)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm02.Fusee.Engine.GUIText)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm02.Fusee.Engine.GUIElement)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.Fusee.Serialization.Serializer)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm07.System.IO.FileStream)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm07.System.IO.File)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm05.Fusee.Serialization.SceneContainer)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm08.ProtoBuf.Meta.TypeModel)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm07.System.IDisposable)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm07.System.String)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm07.System.Void)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm02.Fusee.Engine.MoreShaders)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm02.Fusee.Engine.ShaderProgram)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm01.Fusee.Engine.ClearFlags)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm02.Fusee.Engine.Input)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.Fusee.Engine.MouseButtons)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm02.Fusee.Engine.Time)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm01.Fusee.Engine.InputAxis)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm01.Fusee.Engine.KeyCodes)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm02.Fusee.Engine.Diagnostics)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm07.System.Object)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm05.Fusee.Serialization.MeshContainer)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm07.System.UInt16)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm05.Fusee.Serialization.SceneObjectContainer)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm05.Fusee.Serialization.TransformContainer)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm05.Fusee.Serialization.SceneHeader)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm07.System.Collections.Generic.List$b1.Of($asm05.Fusee.Serialization.SceneObjectContainer))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Math.float4"), [
        $asm07.TypeRef("System.Single"), $asm07.TypeRef("System.Single"), 
        $asm07.TypeRef("System.Single"), $asm07.TypeRef("System.Single")
      ]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm04.TypeRef("Fusee.Math.float4x4"), [$asm04.TypeRef("Fusee.Math.float4x4"), $asm04.TypeRef("Fusee.Math.float4x4")], []))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm04.TypeRef("Fusee.Math.float4x4"), [$asm07.TypeRef("System.Single")], []))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("Fusee.Engine.GUIHandler"), []))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("Fusee.Engine.GUIButton"), [
        $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
        $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("Fusee.Engine.GUIImage"), [
        $asm07.TypeRef("System.String"), $asm07.TypeRef("System.Int32"), 
        $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32"), 
        $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
      ]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("Fusee.Engine.GUIText"), [
        $asm07.TypeRef("System.String"), $asm01.TypeRef("Fusee.Engine.IFont"), 
        $asm07.TypeRef("System.Int32"), $asm07.TypeRef("System.Int32")
      ]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm07.TypeRef("System.Object"), [
        $asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Object"), 
        $asm07.TypeRef("System.Type")
      ], []))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("Fusee.Math.float3"), [
        $asm07.TypeRef("System.Single"), $asm07.TypeRef("System.Single"), 
        $asm07.TypeRef("System.Single")
      ]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm07.TypeRef("System.Collections.Generic.List`1", [$asm05.TypeRef("Fusee.Serialization.SceneObjectContainer")]), [$asm07.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm05.TypeRef("Fusee.Serialization.SceneObjectContainer")])]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm07.TypeRef("System.IO.Stream"), $asm07.TypeRef("System.Object")], []))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm07.System.IDisposable.Dispose)) ();
  };

  function SceneViewer__ctor () {
    $T00().prototype._ctor.call(this);
  };

  function SceneViewer__guiFuseeLink_OnGUIButtonDown (sender, mea) {
    this.OpenLink("http://fusee3d.org");
  };

  function SceneViewer__guiFuseeLink_OnGUIButtonEnter (sender, mea) {
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0.6, 0.2, 0.4));
    this._guiFuseeLink.set_BorderWidth(1);
    this.SetCursor($T04().Hand);
  };

  function SceneViewer__guiFuseeLink_OnGUIButtonLeave (sender, mea) {
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0, 0, 0));
    this._guiFuseeLink.set_BorderWidth(0);
    this.SetCursor($T04().Standard);
  };

  function SceneViewer_AdjustModelScaleOffset () {
    var aABB = null;
    var box = null;
    if (this._sr !== null) {
      box = (aABB = this._sr.GetAABB());
      var arg_2A_0 = (aABB !== null);
    } else {
      arg_2A_0 = false;
    }
    if (!arg_2A_0) {
      this._modelScaleOffset = $T07().Identity.MemberwiseClone();
    }
    var bbox = box.MemberwiseClone();
    var scale = +$T0A().Max(
      $T0A().Max(
        bbox.get_Size().x, 
        bbox.get_Size().y
      ), 
      bbox.get_Size().z
    );
    this._modelScaleOffset = $S01().CallStatic($T07(), "op_Multiply", null, 
      $S02().CallStatic($T07(), "CreateScale", null, (200 / scale)), 
      $T07().CreateTranslation($T0B().op_UnaryNegation(bbox.get_Center().MemberwiseClone()).MemberwiseClone())
    ).MemberwiseClone();
  };

  function SceneViewer_Init () {
    this._zVal = +500;
    this._guiHandler = $S03().Construct();
    this._guiHandler.AttachToContext(this.get_RC());
    this._guiFuseeLink = $S04().Construct(6, 6, 157, 87);
    (this._guiFuseeLink.ButtonColor = $S00().Construct(0, 0, 0, 0));
    (this._guiFuseeLink.BorderColor = $S00().Construct(0, 0.6, 0.2, 1));
    this._guiFuseeLink.set_BorderWidth(0);
    this._guiFuseeLink.add_OnGUIButtonDown($T0D().New(this, $thisType.prototype._guiFuseeLink_OnGUIButtonDown));
    this._guiFuseeLink.add_OnGUIButtonEnter($T0D().New(this, $thisType.prototype._guiFuseeLink_OnGUIButtonEnter));
    this._guiFuseeLink.add_OnGUIButtonLeave($T0D().New(this, $thisType.prototype._guiFuseeLink_OnGUIButtonLeave));
    this._guiHandler.Add(this._guiFuseeLink);
    this._guiFuseeLogo = $S05().Construct("Assets/FuseeLogo150.png", 10, 10, -5, 150, 80);
    this._guiHandler.Add(this._guiFuseeLogo);
    this._guiLatoBlack = this.get_RC().LoadFont("Assets/Lato-Black.ttf", 14);
    this._guiSubText = $S06().Construct("FUSEE 3D Scene Viewer", this._guiLatoBlack, 100, 100);
    (this._guiSubText.TextColor = $S00().Construct(0.05, 0.25, 0.15, 0.8));
    this._guiHandler.Add(this._guiSubText);
    var ser = new ($T12())();
    var file = $T14().OpenRead("Assets/Model.fus");
    try {
      var scene = $T15().$As($S07().CallVirtual("Deserialize", null, ser, file, null, $T15().__Type__));
    } finally {
      if (file !== null) {
        $IM00().Call(file, null);
      }
    }
    this._sr = new ($T05())(scene, "Assets");
    this.AdjustModelScaleOffset();
    this._guiSubText.set_Text("FUSEE 3D Scene");
    if (!((scene.Header.CreatedBy === null) && (scene.Header.CreationDate === null))) {
      var expr_21A = this._guiSubText;
      expr_21A.set_Text(JSIL.ConcatString(expr_21A.get_Text(), " created"));
      if (scene.Header.CreatedBy !== null) {
        var expr_249 = this._guiSubText;
        expr_249.set_Text((expr_249.get_Text() + " by " + scene.Header.CreatedBy));
      }
      if (scene.Header.CreationDate !== null) {
        var expr_284 = this._guiSubText;
        expr_284.set_Text((expr_284.get_Text() + " on " + scene.Header.CreationDate));
      }
    }
    this._subtextWidth = +$T10().GetTextWidth(this._guiSubText.get_Text(), this._guiLatoBlack);
    this._subtextHeight = +$T10().GetTextHeight(this._guiSubText.get_Text(), this._guiLatoBlack);
    this._sColor = $T1A().GetDiffuseColorShader(this.get_RC());
    this.get_RC().SetShader(this._sColor);
    this._colorParam = this._sColor.GetShaderParam("color");
    this.get_RC().SetShaderParam4f(this._colorParam, $S00().Construct(1, 1, 1, 1));
    (this.RenderCanvas$RC.ClearColor = $S00().Construct(1, 1, 1, 1));
  };

  function SceneViewer_Main () {
    var app = new $thisType();
    app.Run();
  };

  function SceneViewer_RenderAFrame () {
    this.get_RC().Clear($T1C().$Flags("Color", "Depth"));
    if ($T1D().get_Instance().IsButton($T1E().Left)) {
      this._angleVelHorz = +((30 * $T09().$Cast($T1F().get_Instance().get_DeltaTime())) * $T1D().get_Instance().GetAxis($T20().MouseX));
      this._angleVelVert = +((30 * $T09().$Cast($T1F().get_Instance().get_DeltaTime())) * $T1D().get_Instance().GetAxis($T20().MouseY));
    } else {
      var curDamp = +$T09().$Cast($T0A().Exp((-0.92000001668930054 * $T1F().get_Instance().get_DeltaTime())));
      this._angleVelHorz *= +curDamp;
      this._angleVelVert *= +curDamp;
    }
    if ($T1D().get_Instance().GetAxis($T20().MouseWheel) === 0) {
      curDamp = +$T09().$Cast($T0A().Exp((-0.92000001668930054 * $T1F().get_Instance().get_DeltaTime())));
      this._zVel *= +((curDamp * curDamp) * curDamp);
    } else {
      this._zVel = +((-100000 * $T1D().get_Instance().GetAxis($T20().MouseWheel)) * $T09().$Cast($T1F().get_Instance().get_DeltaTime()));
    }
    this._angleHorz -= +this._angleVelHorz;
    this._angleVert -= +this._angleVelVert;
    this._zVal = +$T0A().Max(100, $T0A().Min((this._zVal + this._zVel), 1000));
    if ($T1D().get_Instance().IsKey($T21().Left)) {
      this._angleHorz -= +(1 * $T09().$Cast($T1F().get_Instance().get_DeltaTime()));
    }
    if ($T1D().get_Instance().IsKey($T21().Right)) {
      this._angleHorz += +(1 * $T09().$Cast($T1F().get_Instance().get_DeltaTime()));
    }
    if ($T1D().get_Instance().IsKey($T21().Up)) {
      this._angleVert -= +(1 * $T09().$Cast($T1F().get_Instance().get_DeltaTime()));
    }
    if ($T1D().get_Instance().IsKey($T21().Down)) {
      this._angleVert += +(1 * $T09().$Cast($T1F().get_Instance().get_DeltaTime()));
    }
    var mtxRot = $S01().CallStatic($T07(), "op_Multiply", null, 
      $T07().CreateRotationX(this._angleVert), 
      $T07().CreateRotationY(this._angleHorz)
    ).MemberwiseClone();
    var mtxCam = $T07().LookAt(
      0, 
      200, 
      -this._zVal, 
      0, 
      0, 
      0, 
      0, 
      1, 
      0
    );
    (this.RenderCanvas$RC.ModelView = $S01().CallStatic($T07(), "op_Multiply", null, $S01().CallStatic($T07(), "op_Multiply", null, mtxCam, mtxRot), this._modelScaleOffset).MemberwiseClone());
    this._sr.Render(this.get_RC());
    this._guiHandler.RenderGUI();
    this.Present();
  };

  function SceneViewer_Resize () {
    this.get_RC().Viewport(
      0, 
      0, 
      this.get_Width(), 
      this.get_Height()
    );
    var aspectRatio = +($T09().$Cast(this.get_Width()) / $T09().$Cast(this.get_Height()));
    (this.RenderCanvas$RC.Projection = $T07().CreatePerspectiveFieldOfView(0.7853982, aspectRatio, 1, 10000).MemberwiseClone());
    this._guiSubText.set_PosX(((($T09().$Cast(this.get_Width()) - this._subtextWidth) / 2) | 0));
    this._guiSubText.set_PosY(((($T09().$Cast(this.get_Height()) - this._subtextHeight) - 3) | 0));
    this._guiHandler.Refresh();
  };

  function SceneViewer_TestDeserialize () {
    var ser = new ($T12())();
    var file = $T14().OpenRead("Assets/Test.fus");
    try {
      var mc2 = $T15().$As($S07().CallVirtual("Deserialize", null, ser, file, null, $T15().__Type__));
    } finally {
      if (file !== null) {
        $IM00().Call(file, null);
      }
    }
    $T22().Log(mc2.toString());
  };

  function SceneViewer_TestSerialize () {
    var aMesh = (new ($T24())()).__Initialize__({
        Vertices: JSIL.Array.New($T0B(), [$S08().Construct(-1, -1, -1), $S08().Construct(-1, -1, 1), $S08().Construct(-1, 1, -1), $S08().Construct(1, -1, -1), $S08().Construct(1, 1, 1), $S08().Construct(-1, 1, 1), $S08().Construct(1, -1, 1), $S08().Construct(1, 1, -1)]), 
        Normals: JSIL.Array.New($T0B(), [$S08().Construct(-1, -1, -1), $S08().Construct(-1, -1, 1), $S08().Construct(-1, 1, -1), $S08().Construct(1, -1, -1), $S08().Construct(1, 1, 1), $S08().Construct(-1, 1, 1), $S08().Construct(1, -1, 1), $S08().Construct(1, 1, -1)]), 
        Triangles: JSIL.Array.New($T25(), [0, 1, 2, 0, 2, 3, 0, 3, 1, 4, 5, 6, 4, 6, 7, 4, 7, 5])}
    );
    var aChild = (new ($T26())()).__Initialize__({
        Mesh: aMesh, 
        Transform: (new ($T27())()).__Initialize__({
            Rotation: $S08().Construct(0, 0, 0), 
            Translation: $S08().Construct(0.11, 0.11, 0), 
            Scale: $S08().Construct(1, 1, 1)}
        )}
    );
    var parent = (new ($T15())()).__Initialize__({
        Header: (new ($T28())()).__Initialize__({
            Version: 1, 
            Generator: "Fusee.SceneViewer", 
            CreatedBy: "FuseeProjetTeam"}
        ), 
        Children: $S09().Construct(JSIL.Array.New($T26(), [aChild, aChild, (new ($T26())()).__Initialize__({
                Mesh: aMesh, 
                Transform: (new ($T27())()).__Initialize__({
                    Rotation: $S08().Construct(0, 0, 0), 
                    Translation: $S08().Construct(0.22, 0.22, 0), 
                    Scale: $S08().Construct(1, 1, 1)}
                )}
            )]))}
    );
    var ser = new ($T12())();
    var file = $T14().Create("Assets/Test.fus");
    try {
      $S0A().CallVirtual("Serialize", null, ser, file, parent);
    } finally {
      if (file !== null) {
        $IM00().Call(file, null);
      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm02.TypeRef("Fusee.Engine.RenderCanvas"), 
      Name: "Examples.SceneViewer.SceneViewer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer__ctor
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonDown", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("Fusee.Engine.GUIButton"), $asm01.TypeRef("Fusee.Engine.MouseEventArgs")], []), 
      SceneViewer__guiFuseeLink_OnGUIButtonDown
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonEnter", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("Fusee.Engine.GUIButton"), $asm01.TypeRef("Fusee.Engine.MouseEventArgs")], []), 
      SceneViewer__guiFuseeLink_OnGUIButtonEnter
    );

    $.Method({Static:false, Public:false}, "_guiFuseeLink_OnGUIButtonLeave", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("Fusee.Engine.GUIButton"), $asm01.TypeRef("Fusee.Engine.MouseEventArgs")], []), 
      SceneViewer__guiFuseeLink_OnGUIButtonLeave
    );

    $.Method({Static:false, Public:true }, "AdjustModelScaleOffset", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_AdjustModelScaleOffset
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Init", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_Init
    );

    $.Method({Static:true , Public:true }, "Main", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_Main
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RenderAFrame", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_RenderAFrame
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Resize", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_Resize
    );

    $.Method({Static:false, Public:false}, "TestDeserialize", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_TestDeserialize
    );

    $.Method({Static:false, Public:false}, "TestSerialize", 
      new JSIL.MethodSignature(null, [], []), 
      SceneViewer_TestSerialize
    );

    $.Constant({Static:true , Public:false}, "RotationSpeed", 1); 
    $.Constant({Static:true , Public:false}, "Damping", 0.92); 
    $.Field({Static:false, Public:false}, "_angleHorz", $.Single); 
    $.Field({Static:false, Public:false}, "_angleVert", $.Single); 
    $.Field({Static:false, Public:false}, "_angleVelHorz", $.Single); 
    $.Field({Static:false, Public:false}, "_angleVelVert", $.Single); 
    $.Field({Static:false, Public:false}, "_zVel", $.Single); 
    $.Field({Static:false, Public:false}, "_zVal", $.Single); 
    $.Field({Static:false, Public:false}, "_subtextWidth", $.Single); 
    $.Field({Static:false, Public:false}, "_subtextHeight", $.Single); 
    $.Field({Static:false, Public:false}, "_modelScaleOffset", $asm04.TypeRef("Fusee.Math.float4x4")); 
    $.Field({Static:false, Public:false}, "_meshFace", $asm02.TypeRef("Fusee.Engine.Mesh")); 
    $.Field({Static:false, Public:false}, "_meshTea", $asm02.TypeRef("Fusee.Engine.Mesh")); 
    $.Field({Static:false, Public:false}, "_sr", $asm03.TypeRef("Fusee.Engine.SimpleScene.SceneRenderer")); 
    $.Field({Static:false, Public:false}, "_sColor", $asm02.TypeRef("Fusee.Engine.ShaderProgram")); 
    $.Field({Static:false, Public:false}, "_colorParam", $asm01.TypeRef("Fusee.Engine.IShaderParam")); 
    $.Field({Static:false, Public:false}, "_guiHandler", $asm02.TypeRef("Fusee.Engine.GUIHandler")); 
    $.Field({Static:false, Public:false}, "_guiFuseeLogo", $asm02.TypeRef("Fusee.Engine.GUIImage")); 
    $.Field({Static:false, Public:false}, "_guiFuseeLink", $asm02.TypeRef("Fusee.Engine.GUIButton")); 
    $.Field({Static:false, Public:false}, "_guiSubText", $asm02.TypeRef("Fusee.Engine.GUIText")); 
    $.Field({Static:false, Public:false}, "_guiLatoBlack", $asm01.TypeRef("Fusee.Engine.IFont")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

