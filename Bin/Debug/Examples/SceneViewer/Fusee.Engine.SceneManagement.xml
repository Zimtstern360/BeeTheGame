<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.Engine.SceneManagement</name>
    </assembly>
    <members>
        <member name="T:Fusee.SceneManagement.NamespaceDoc">
            <summary>
            Provides scene management functionality for 3D graphics rendering and object relationships.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.ActionCode">
            <summary>
            ActionCode class grants access to an SceneEntities Components.
            Supported: DeltaTime, Input recognition
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Component">
            <summary>
            Base class from which all Components are derived.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Component.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Component"/> class. Whitout setting a SceneEntity.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Component.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Component"/> class with a SceneEntity.
            </summary>
            <param name="sceneEntity">The owner scene entity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Component.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes the Component to the SceneVisitor which decides what to do with that Component.
            </summary>
            <param name="sv">The sv.</param>
        </member>
        <member name="P:Fusee.SceneManagement.Component.SceneEntity">
            <summary>
            Gets or sets the scene entity of this Component.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Init(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Init is called upon creation of an ActionCode Object and utilizes the access to a SceneEntitie's transform and renderer objects.
            </summary>
            <param name="entity">The owner entity of this component.</param>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            Traverse is giving the Update routine access to the DeltaTime and the Input class and afterwards executes the Update routine.
            </summary>
            <param name="sceneVisitorRendering">The scene visitor rendering.</param>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Start">
            <summary>
            Start is called only once. At the time of the call other objects inside the scene are already initialized.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Update">
            <summary>
            Update is called every frame. Please avoid placing heavy calculations inside this Function.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.ActionCode.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Accept is called by the current visitor. This function is currently used for traversal and search algorithms by the SceneManager object. 
            </summary>
            <param name="sv">The visitor that is currently traversing the scene.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Camera">
            <summary>
            This class is derived from Component and set's a Camera in the scene.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Camera"/> class. The ViewMatrix will be set to float4x4 identity matrix.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.#ctor(Fusee.SceneManagement.Transformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Camera"/> class. The ViewMatrix will be set to a provided float 4x4 matrix.
            </summary>
            <param name="cameratransformation">The matrix that will become the Viewmatrix.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Camera"/> class. The SceneEntity will be set to apply its transformation to the Camera Component.
            </summary>
            <param name="owner">The SceneEntity where the Camera Component is attached to.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.ProjectionType(Fusee.SceneManagement.Projection)">
            <summary>
            Sets the projection type of the Camera object.  
            </summary>
            <param name="projection">The Projection enum whereby Projection.Perspective or Projection.Orthographic is available.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.Resize">
            <summary>
            This is called by the Resize function inside the entry point object in order to update the Cameras view frustum dimensions upon window resizing.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.Resize(System.Single,System.Single)">
            <summary>
            Sets the Cameras view frustum dimensions with width and height units as pixels.
            </summary>
            <param name="width">The Camera width in pixels.</param>
            <param name="height">The Camera height in pixels.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.SubmitWork">
            <summary>
            TraverseForRendering add's Camera to the lightqueue.
            </summary>
            <returns>A RenderingCamera Object that passes the Camera to the renderContext.</returns>
        </member>
        <member name="M:Fusee.SceneManagement.Camera.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Accept is called by the current visitor. This function is currently used for traversal and search algorithms by the SceneManager object. 
            </summary>
            <param name="sv">The visitor that is currently traversing the scene.</param>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.ViewMatrix">
            <summary>
            Allows to set and get the Viewmatrix of the Camera.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.Width">
            <summary>
            Sets the Cameras view width in pixels.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.Height">
            <summary>
            Sets the Cameras view height in pixels.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.FieldOfView">
            <summary>
            Sets the Cameras field of View angle. Recommended default value is 60 (degrees).
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.Near">
            <summary>
            Sets the Cameras near plane. The near plane describes the minimum distance from Camera to an object in scene. If the cameras distance to an object is smaller than the near value is set to, the scene object will not be rendered.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.Far">
            <summary>
            Sets the Cameras far plane. The far plane describes the maximum distance from Camera to an object in scene. Scene objects that are further away than the far value will not be rendered.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Camera.AspectRatio">
            <summary>
            Sets the Cameras aspect ratio. The aspect ratio is the width to height relation of the screen, e.g. 16:9 (aspectratio=16/9).
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.DirectionalLight">
            <summary>
            This class is derived from Light and set's a Directionallight in the scene.
            A direction, a color and the position of the lightsource is needed.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Light">
            <summary>
            Light is the base class for all lightsources in the scene.
            All lights are derived from this class and this class is derived from Component.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._type">
            <summary>
            The <see cref="T:Fusee.SceneManagement.Light.LightType"/>.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._position">
            <summary>
            The position in the scene.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._direction">
            <summary>
            The direction of the light along the z-axis.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._diffuseColor">
            <summary>
            The diffuse light color.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._ambientColor">
            <summary>
            The ambient light color.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._specularColor">
            <summary>
            The specular light color.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light._channel">
            <summary>
            The light channel (0-7).
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Light.#ctor">
            <summary>
            Creates a light object.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.Light.LightType">
            <summary>
            Enums for lighttypes at the moment there are 3
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Disabled">
            <summary>
            Disabled Light = 0
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Directional">
            <summary>
            Directional = 1
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Point">
            <summary>
            Point = 1
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Light.LightType.Spot">
            <summary>
            Spot = 2
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float3,System.Int32)">
            <summary>
            Creates a directional light in the scene. Direction, color, position, and channel is needed.
            It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="direction">Direction of the light.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="position">The position in the scene.</param>
            <param name="channel">The memory space of the light.(0 - 7)</param>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.#ctor(System.Int32)">
            <summary>
            Creates a directional light in the scene. Direction, color and position will get standart values.
            Channel is needed. It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            TraverseForRendering add's Directionallight to the light queue.
            </summary>
            <param name="sceneVisitorRendering">The SceneVisitorRendering object that is passing the light information to the rendeirng queue.</param>
        </member>
        <member name="M:Fusee.SceneManagement.DirectionalLight.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Accept is called by the current visitor. This function is currently used for traversal and search algorithms by the SceneManager object. 
            </summary>
            <param name="sv">The visitor that is currently traversing the scene.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Material">
            <summary>
            The Material class holds information about its Shaderprogram, Texture Data and Shader parameters. This class is in prototype state.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material.imgData">
            <summary>
            The img data of the first image.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material.imgData2">
            <summary>
            The img data of the second image.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material.iTex">
            <summary>
            The <see cref="T:Fusee.Engine.ITexture"/> for the first texture.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material.iTex2">
            <summary>
            The <see cref="T:Fusee.Engine.ITexture"/> for the second texture.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material._vColorParam">
            <summary>
            The color parameter that will be passed into the shader.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material._texture1Param">
            <summary>
            The texture parameter that will be passed into the shader.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Material.sp">
            <summary>
            The <see cref="T:Fusee.Engine.ShaderProgram"/> that is used to render this material.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Material.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Material"/> class.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Material.#ctor(Fusee.Engine.ShaderProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Material"/> class.
            </summary>
            <param name="_program">The Shaderprogram of this material instance.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Material.Update(Fusee.Engine.RenderContext)">
            <summary>
            Sets the materials shaderprogram onto the rendercontext upon render time.
            </summary>
            <param name="renderContext">The render context that handles the drawing of the application.</param>
        </member>
        <member name="T:Fusee.SceneManagement.PointLight">
            <summary>
            This class is derived from Light and set's a Pointlight in the scene.
            A color and the position of the lightsource are needed.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.PointLight"/> class. Position, color and channel are needed.
            </summary>
            <param name="position">The position of the pointlight.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.PointLight"/> class. Only the channel is needed. Other params
            will be set to default value. 
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.#ctor(Fusee.Math.float4,Fusee.Math.float3,System.Int32)">
            <summary>
            Creates a point light in the scene. Position, color, position, and channel is needed.
            It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="color">The color of the light.</param>
            <param name="position">The position in the scene.</param>
            <param name="channel">The memory space of the light.(0 - 7)</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            Traverses this pointligt for rendering. The light information is passed to the SceneVisitorRendering.
            </summary>
            <param name="sceneVisitorRendering">The scene visitor rendering object grabs the light information upon render time.</param>
        </member>
        <member name="M:Fusee.SceneManagement.PointLight.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes the Component to the SceneVisitor which decides what to do with that Component.
            </summary>
            <param name="sv">The SceneVisitor instance updates the position of this pointlight according to the transformation of the pointlights parent.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderCamera">
            <summary>
            RenderCamera is derived from Renderjob and is responible for passing the Camera towards the RenderContext.
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.RenderJob">
            <summary>
            Provides the virtual SubmitWork method.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderJob.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            The SubmitWork method will be overwritten by a visited Component that "want's" to be rendered.
            Therefore a RenderContext is needed.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderCamera.#ctor(Fusee.Math.float4x4,Fusee.Math.float4x4,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderCamera"/> class. Needs the ViewMatrix of a Camera.
            </summary>
            <param name="matrix">The matrix that will be the new ViewMatrix.</param>
            <param name="projection">The matrix that will be the new projection.</param>
            <param name="dirty">True if values have changed; otherwise, false.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderCamera.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Sets the ViewMatrix in the RenderContext.
            </summary>
            <param name="renderContext">The RenderContext that handles the rendering.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderDirectionalLight">
            <summary>
            RednerDirectionalLight is derived from Renderjob and is responible for passing the DirectionalLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderDirectionalLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Creates a RenderDirectionalLight needed parameters:( float3, float4, Light.Lighttype, int).
            </summary>
            <param name="direction">Direction of the light.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="type">The light type.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderDirectionalLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Passes directionallight's parameters to RenderContext.
            </summary>
            <param name="renderContext">The <see cref="T:Fusee.Engine.RenderContext"/>.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Renderer">
            <summary>
            Renderer is derived from Component. Creates a drawable ingame object.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Renderer.mesh">
            <summary>
            The mesh.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Renderer.material">
            <summary>
            The material.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Renderer.color">
            <summary>
            The color.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class. Creates usable ingame object from an obj.model file, and a new material.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor(Fusee.Engine.ShaderProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class.
            </summary>
            <param name="sp">The Shaderprogram is used to initialize the Material<see cref="T:Fusee.SceneManagement.Material"/> of this Renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor(Fusee.Engine.Geometry)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class.
            </summary>
            <param name="geo">The geometry information is parsed to a Mesh<see cref="T:Fusee.Engine.Mesh"/> object upon initilization of Renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor(Fusee.Engine.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class.
            </summary>
            <param name="mesh">The mesh of this Renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor(Fusee.Engine.Mesh,Fusee.Engine.ShaderProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class.
            </summary>
            <param name="mesh">The Mesh of this Renderer.</param>
            <param name="sp">The Shaderprogram is used to initialize the Material of the Renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.#ctor(Fusee.Engine.Geometry,Fusee.Engine.ShaderProgram)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Renderer"/> class.
            </summary>
            <param name="geo">The geo.</param>
            <param name="shaderProgram">The shader program.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Renderer.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes the Component to the SceneVisitor which decides what to do with that Component.
            </summary>
            <param name="sv">The SceneVisitor that traverses through the information of the renderer during runtime.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderPointLight">
            <summary>
            RenderPointLight is derived from Renderjob and is responible for passing the PointLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderPointLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderPointLight"/> class. Position, color, type and channel are needed.
            </summary>
            <param name="position">The position of the light.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="type">The light type.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderPointLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Passes pointlight's parameters to RenderContext.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderSpotLight">
            <summary>
            RenderSpotLight is derived from Renderjob and is responible for passing the SpotLight towards the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderSpotLight.#ctor(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Single,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderSpotLight"/> class. Position, direction, color, type and channel.
            </summary>
            <param name="position">The position of the light.</param>
            <param name="direction">The direction of the light.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="angle">The angle of the spot light.</param>
            <param name="type">The lighttype.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderSpotLight.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Passes spotlight's parameters to RenderContext.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="T:Fusee.SceneManagement.SceneManager">
            <summary>
            The SceneManager class handles the rendering of the scene. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddSceneEntity(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Adds a <see cref="T:Fusee.SceneManagement.SceneEntity"/> to the scene.
            </summary>
            <param name="sceneEntity">The scene entity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddCamera(Fusee.SceneManagement.RenderCamera)">
            <summary>
            Adds the camera to the rendering queue [1].
            </summary>
            <param name="cameramatrix">The RenderCamera object that holds the Projection and Transformation matrix.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.Traverse(Fusee.Engine.RenderCanvas)">
            <summary>
            Traverses the scene's entities with their corresponding components in order to construct an 3D world. This function is called every frame.
            </summary>
            <param name="renderCanvas">The render canvas that presents the final render image.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.UpdateLights">
            <summary>
            Updates the lights information before the scene is rendered.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddRenderJob(Fusee.SceneManagement.RenderJob)">
            <summary>
            Adds a render job to the render queue[2].
            </summary>
            <param name="job">The job.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.AddLightJob(Fusee.SceneManagement.RenderJob)">
            <summary>
            Adds a light job to the light queue [0].
            </summary>
            <param name="job">The job.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.FindSceneEntity(System.String)">
            <summary>
            Finds the scene entity inside the current scene.
            </summary>
            <param name="name">The name of the SceneEntity that needs to be found.</param>
            <returns>On successful search the first SceneEntity that has the name is returned.</returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneManager.StartActionCode">
            <summary>
            Initializes all <see cref="T:Fusee.SceneManagement.ActionCode"/> objects in the scene and calls their Start method once.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.SceneManager.Manager">
            <summary>
            Gets the Singleton SceneManager instance.
            </summary>
            <value>
            The manager instance.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.SceneManager.RC">
            <summary>
            Gets or sets(only once) a RenderContext instance.
            </summary>
            <value>
            The RenderContext.
            </value>
        </member>
        <member name="T:Fusee.SceneManagement.RenderRenderer">
            <summary>
            Creates a RendererRenderer Component that will be passed to the RenderContext as the current shaderprogram. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderRenderer.#ctor(Fusee.SceneManagement.Renderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderRenderer"/> class. Needs to be provided with a Renderer Component.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderRenderer.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Overwrites the SubmitWork method of RenderJob class. Render Component will get shaders and materials and passed to the RenderContextImplementation.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderMatrix">
            <summary>
            Creates a float4x4 matrix that will be passed to the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMatrix.#ctor(Fusee.Math.float4x4)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderMatrix"/> class. Needs to be provided with a matrix that needs to be rendered.
            </summary>
            <param name="matrix">The matrix that need's to be rendered e.g. the matrix of a object in scene.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMatrix.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            The SubmitWork method will be overwritten by a visited Component that "want's" to be rendered.
            Therefore a RenderContext is needed.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="T:Fusee.SceneManagement.RenderMesh">
            <summary>
            Creates a mesh that will be passed to the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMesh.#ctor(Fusee.Engine.Mesh)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.RenderMesh"/> class. Needs to be provided with a mesh that needs to be rendered.
            </summary>
            <param name="mesh">The mesh that need's to be rendered e.g. the mesh of a ingame object.</param>
        </member>
        <member name="M:Fusee.SceneManagement.RenderMesh.SubmitWork(Fusee.Engine.RenderContext)">
            <summary>
            Overwrites the SubmitWork method of RenderJob class. The mesh will be provided with everything it need's and passed to
            RenderContextImplementation.
            </summary>
            <param name="renderContext">The render context.</param>
        </member>
        <member name="T:Fusee.SceneManagement.SceneEntity">
            <summary>
            The SceneEntity class can contain components that do different tasks during runtime in order to create a scene. Every SceneEntity automatically has a transform component which is used for the 3D orientation. 
            It is required to give a SceneEntity a name in order to use the search algorithms of <see cref="T:Fusee.SceneManagement.SceneManager"/> during runtime.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.name">
            <summary>
            The name of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.tag">
            <summary>
            The tag of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.transform">
            <summary>
            The transform Component of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity.renderer">
            <summary>
            The renderer Component of the SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._parent">
            <summary>
            The _parent SceneEntity of the current SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._childSceneEntities">
            <summary>
            The _child scene entities of the current SceneEntity.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneEntity._childComponents">
            <summary>
            The components of the current SceneEntity. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="parent">The parent SceneEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(System.String,Fusee.SceneManagement.ActionCode,Fusee.SceneManagement.SceneEntity,Fusee.SceneManagement.Material,Fusee.SceneManagement.Renderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="_name">The _name.</param>
            <param name="action">The action.</param>
            <param name="parent">The parent.</param>
            <param name="material">The material.</param>
            <param name="_renderer">The _renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(System.String,Fusee.SceneManagement.ActionCode,Fusee.SceneManagement.Material,Fusee.SceneManagement.Renderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="_name">The _name.</param>
            <param name="action">The action.</param>
            <param name="material">The material.</param>
            <param name="_renderer">The _renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(System.String,Fusee.SceneManagement.Material,Fusee.SceneManagement.Renderer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="_name">The _name.</param>
            <param name="material">The material.</param>
            <param name="_renderer">The _renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(System.String,Fusee.SceneManagement.ActionCode,Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="_name">The _name.</param>
            <param name="action">The action.</param>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.#ctor(System.String,Fusee.SceneManagement.ActionCode)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneEntity"/> class.
            </summary>
            <param name="_name">The _name.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.TraverseForRendering(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Traverses through the current SceneEntities components and through its children and their components.
            </summary>
            <param name="sceneVisitorRendering">The scene visitor rendering that grabs the informations from the SceneEntity that are required to render it.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Accepts the specified SceneVisitor in order to pass informations to it.
            </summary>
            <param name="sv">The SceneVisitor.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.AddComponent(Fusee.SceneManagement.Component)">
            <summary>
            Adds a component to the SceneEntity.
            </summary>
            <param name="component">The component.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.AddChild(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Adds a child SceneEntity to the current SceneEntity. 
            This method creates a relation between SceneEntities that is required for the transformation order.
            </summary>
            <param name="child">The child of type SceneEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetChildren">
            <summary>
            Gets all child SceneEntities of the current SceneEntity. 
            If no children are attached to this SceneEntity null is returned.
            </summary>
            <returns>All child component of this <see cref="T:Fusee.SceneManagement.SceneEntity"/>.</returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetComponent``1">
            <summary>
            Gets the specified type of Component from the SceneEntity.
            </summary>
            <typeparam name="T">The specified type. This has to be a derivate of the <see cref="T:Fusee.SceneManagement.Component"/> class.</typeparam>
            <returns>The first component of the specified type if one is found, otherwise null.</returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.GetComponents``1">
            <summary>
            Gets all components of specified type from this current SceneEntity.
            </summary>
            <typeparam name="T">This is the type of the Component. The type in this case can be any derivate of the Component class, e.g. <see cref="T:Fusee.SceneManagement.Renderer"/></typeparam>
            <returns>On successful search a list of Components of specified type is returned.</returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneEntity.FindSceneEntity(System.String)">
            <summary>
            Finds a SceneEntity in the scene. This method is an access point to FindSceneEntity method inside <see cref="T:Fusee.SceneManagement.SceneManager"/>.
            </summary>
            <param name="sceneEntityName">Name of the scene entity.</param>
            <returns>On successful search the first SceneEntity with the selected name is returned.</returns>
        </member>
        <member name="P:Fusee.SceneManagement.SceneEntity.parent">
            <summary>
            Gets or sets the parent SceneEntity. Null is returned if this SceneEntity doesn't have a parent.
            </summary>
            <value>
            The parent. 
            </value>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitor">
            <summary>
            The SceneVisitor is the base class for Scene traversing functions
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified cEntity to collect data if required by the current Visitor derivate.
            </summary>
            <param name="cEntity">The cEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.ActionCode)">
            <summary>
            Visits the specified action code to collect data if required by the current Visitor derivate.
            </summary>
            <param name="actionCode">The action code.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.DirectionalLight)">
            <summary>
            Visits the specified directional light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="directionalLight">The directional light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.PointLight)">
            <summary>
            Visits the specified point light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="pointLight">The point light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Renderer)">
            <summary>
            Visits the specified renderer to collect data if required by the current Visitor derivate.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.SpotLight)">
            <summary>
            Visits the specified spot light to collect data if required by the current Visitor derivate.
            </summary>
            <param name="spotLight">The spot light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Transformation)">
            <summary>
            Visits the specified transformation to collect data if required by the current Visitor derivate.
            </summary>
            <param name="transformation">The transformation.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitor.Visit(Fusee.SceneManagement.Camera)">
            <summary>
            Visits the specified camera to collect data if required by the current Visitor derivate.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitorRendering">
            <summary>
            A derivate of SceneVisitor, used to Visit Renderer, Transformation and Mesh components and submit to renderqueue of <see cref="T:Fusee.SceneManagement.SceneManager"/>.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasTransform">
            <summary>
            The _has transform
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasRenderer">
            <summary>
            The _has renderer
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._hasMesh">
            <summary>
            The _has mesh
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._queue">
            <summary>
            The _queue
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._mtxModelViewStack">
            <summary>
            The _MTX model view stack
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._meshStack">
            <summary>
            The _mesh stack
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SceneVisitorRendering._RendererStack">
            <summary>
            The _ renderer stack
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.#ctor(Fusee.SceneManagement.SceneManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SceneVisitorRendering"/> class.
            </summary>
            <param name="queue">The SceneManager reference.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.StoreMesh(Fusee.Engine.Mesh)">
            <summary>
            Stores the mesh in internal stack.
            </summary>
            <param name="mesh">The mesh.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.StoreRenderer(Fusee.SceneManagement.Renderer)">
            <summary>
            Stores the renderer in internal stack.
            </summary>
            <param name="Renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddTransform(Fusee.SceneManagement.Transformation)">
            <summary>
            Adds the transform object to the internal stack.
            </summary>
            <param name="transform">The transform.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.HasRenderingTriple">
            <summary>
            Determines whether [has rendering triple].
            </summary>
            <returns>
              <c>true</c> if [has rendering triple]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightDirectional(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds a <see cref="T:Fusee.SceneManagement.DirectionalLight"/> to the rendering queue.
            </summary>
            <param name="direction">The direction.</param>
            <param name="diffuse">The diffuse color.</param>
            <param name="ambient">The ambient color.</param>
            <param name="specular">The specular color.</param>
            <param name="type">The type.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightPoint(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds a <see cref="T:Fusee.SceneManagement.PointLight"/> to the rendering queue.
            </summary>
            <param name="position">The position.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="type">The lighttype.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddLightSpot(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Single,Fusee.SceneManagement.Light.LightType,System.Int32)">
            <summary>
            Adds a <see cref="T:Fusee.SceneManagement.SpotLight"/> to the rendering queue.
            </summary>
            <param name="position">The position of the light in the scene.</param>
            <param name="direction">The direction of the light along its z-axis.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="angle">The angle of the spot light.</param>
            <param name="type">The lighttype.</param>
            <param name="channel">The channel.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.AddRenderJob(Fusee.Math.float4x4,Fusee.Engine.Mesh,Fusee.SceneManagement.Renderer)">
            <summary>
            Adds the render job that consists of Matrix, Renderer and Mesh to the rendering queue.
            </summary>
            <param name="matrix">The matrix.</param>
            <param name="mesh">The mesh.</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.SceneEntity"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="cEntity">The cEntity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.ActionCode)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.ActionCode"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="actionCode">The action code.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Renderer)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.Renderer"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Transformation)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.Transformation"/>.
            </summary>
            <param name="transform">The transformation instance.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.DirectionalLight)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.DirectionalLight"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="directionalLight">The directional light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.PointLight)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.PointLight"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="pointLight">The point light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.SpotLight)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.SpotLight"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="spotLight">The spot light.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorRendering.Visit(Fusee.SceneManagement.Camera)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.Camera"/> to collect data if required by the current Visitor derivate.
            </summary>
            <param name="camera">The camera.</param>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitorSearch">
            <summary>
            Derivate of SceneVisitor, used to search for SceneEntities or Components in the scene.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorSearch.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.SceneEntity"/> to check it's name and set _searchresult as reference if the name matches.
            </summary>
            <param name="sceneEntity">The scene entity.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorSearch.FindSceneEntity(System.Collections.Generic.List{Fusee.SceneManagement.SceneEntity},System.String)">
            <summary>
            Finds a <see cref="T:Fusee.SceneManagement.SceneEntity"/> by it's name.
            </summary>
            <param name="sceneEntities">The list of scene entities from SceneManager that will be visited.</param>
            <param name="name">The searched name of a SceneEntity.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.SceneManagement.SceneVisitorStartAction">
            <summary>
            Initializes all objects of type <see cref="T:Fusee.SceneManagement.ActionCode"/> in the scene by calling their Start methods.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorStartAction.Visit(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.SceneEntity"/> to gather data if required by the current Visitor derivate.
            </summary>
            <param name="cEntity">The SceneEntity instance.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SceneVisitorStartAction.Visit(Fusee.SceneManagement.ActionCode)">
            <summary>
            Visits the specified <see cref="T:Fusee.SceneManagement.ActionCode"/> to call it's Start method for initialization.
            </summary>
            <param name="actionCode">The ActionCode instance.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Projection">
            <summary>
            The Projection enums that are used by the Camera class.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Projection.Perspective">
            <summary>
            Perspective = 0
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.Projection.Orthographic">
            <summary>
            Orthographic = 1
            </summary>
        </member>
        <member name="T:Fusee.SceneManagement.SpotLight">
            <summary>
            This class is derived from Light and set's a Spotlight in the scene.
            </summary>
        </member>
        <member name="F:Fusee.SceneManagement.SpotLight._angle">
            <summary>
            The angle of the spotlight.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.#ctor(Fusee.Math.float3,Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,System.Single,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SpotLight"/> class. Position, direction, color and the channel are needed.
            </summary>
            <param name="position">The position of the spotlight.</param>
            <param name="direction">The direction of the spotlight.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="angle">The light angle of the spotlight.</param>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.SpotLight"/> class. Only the channel is needed.
            </summary>
            <param name="channel">The memory space of the light(0 - 7).</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.#ctor(Fusee.Math.float3,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float4,Fusee.Math.float3,System.Int32)">
            <summary>
            Creates a spot light in the scene. Position, color, position, and channel is needed.
            It is possible to set up to 8 lights in the scene.
            </summary>
            <param name="direction">Direction of the light.</param>
            <param name="diffuse">The diffuse light color.</param>
            <param name="ambient">The ambient light color.</param>
            <param name="specular">The specular light color.</param>
            <param name="position">The lights position in the scene.</param>
            <param name="channel">The memory space of the light.(0 - 7)</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.TraverseForRendering(Fusee.SceneManagement.SceneVisitorRendering)">
            <summary>
            Add's a Spotlight to the lightqueue.
            </summary>
            <param name="sceneVisitorRendering">The SceneVisitorRendering instance.</param>
        </member>
        <member name="M:Fusee.SceneManagement.SpotLight.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes the Component to the SceneVisitor which decides what to do with that Component.
            </summary>
            <param name="sv">The SceneVisitor.</param>
        </member>
        <member name="T:Fusee.SceneManagement.Transformation">
            <summary>
            Transformation is derived from Component and stores all positions, angles and movement of all SceneEntities. 
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Transformation"/> class. No SceneEntity will be set.
            </summary>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.#ctor(Fusee.SceneManagement.SceneEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.SceneManagement.Transformation"/> class. Sets a SceneEntity for Transform.
            This is the recommended Constructor.
            </summary>
            <param name="entity">The SceneEntity that will be set in Transform.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.SetGlobalMat(Fusee.Math.float4x4)">
            <summary>
            Sets the global Matrix of this Transformation instance. This method is used by <see cref="T:Fusee.SceneManagement.SceneVisitor"/>. 
            Do not use this method. use the GlobalMatrix property instead.
            </summary>
            <param name="mat">The mat.</param>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.GetScaleFromMatrix(Fusee.Math.float4x4)">
            <summary>
            Gets the scale as float3 from a matrix.
            </summary>
            <param name="matrix">The matrix.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.SceneManagement.Transformation.Accept(Fusee.SceneManagement.SceneVisitor)">
            <summary>
            Passes this Component to the <see cref="T:Fusee.SceneManagement.SceneVisitor"/> which decides what to do with that Component.
            </summary>
            <param name="sv">The SceneVisitor.</param>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.Forward">
            <summary>
            Gets the forward direction as float3 of the Transformation instance.
            </summary>
            <value>
            The forward.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.Parent">
            <summary>
            Sets the parent <see cref="T:Fusee.SceneManagement.SceneEntity"/>.
            </summary>
            <value>
            The parent.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.Matrix">
            <summary>
            Gets or sets the float4x4 local transformMatrix.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalMatrix">
            <summary>
            Gets or sets the float4x4 global transformMatrix.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalMatrixDirty">
            <summary>
            Gets a value indicating whether [global matrix dirty].
            Do not use this method. It is intended to be used inside of <see cref="T:Fusee.SceneManagement.SceneVisitor"/> for covering the special cases of overwriting local and global matrices on this transformation instance. 
            </summary>
            <value>
              <c>true</c> if [global matrix dirty]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalPosition">
            <summary>
            Gets or sets the float3 LocalPosition of this Transformation instance.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalPosition">
            <summary>
            Gets or sets the global position of this Transformation instance.
            </summary>
            <value>
            The global position as float3.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalScale">
            <summary>
            Gets or sets the float3 LocalScale of this Transformation instance.
            </summary>
            <value>
            The local scale as float3.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalScale">
            <summary>
            Gets or sets the global scale of this Transformation instance.
            </summary>
            <value>
            The global scale as float3.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalQuaternion">
            <summary>
            Gets or sets the Quaternion LocalQuaternion.
            </summary>
            <value>
            The local quaternion.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalQuaternion">
            <summary>
            Gets or sets the Quaternion GlobalQuaternion.
            </summary>
            <value>
            The global quaternion.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.LocalEulerAngles">
            <summary>
            Gets or sets the float3 LocalEulerAngles.
            </summary>
            <value>
            The local euler angles as float3.
            </value>
        </member>
        <member name="P:Fusee.SceneManagement.Transformation.GlobalEulerAngles">
            <summary>
            Gets or sets the float3 GlobalEulerAngles.
            </summary>
            <value>
            The global euler angles as float3.
            </value>
        </member>
        <member name="T:Fusee.SceneManagement.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:Fusee.SceneManagement.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
    </members>
</doc>
